{
  "api/Microsoft.Extensions.DependencyInjection.SimpleHtmlToPdfRegistration.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.SimpleHtmlToPdfRegistration.html",
    "title": "Class SimpleHtmlToPdfRegistration | Simple Html To Pdf API Reference",
    "summary": "Class SimpleHtmlToPdfRegistration Namespace Microsoft.Extensions.DependencyInjection Assembly SimpleHtmlToPdf.dll Registration extension methods public static class SimpleHtmlToPdfRegistration Inheritance object SimpleHtmlToPdfRegistration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddSimpleHtmlToPdf(IServiceCollection?) Registers the simple HTML to PDF. public static IServiceCollection? AddSimpleHtmlToPdf(this IServiceCollection? serviceDescriptors) Parameters serviceDescriptors IServiceCollection The service descriptors. Returns IServiceCollection RegisterSimpleHtmlToPdf(ICanisterConfiguration?) Registers the simple HTML to PDF. public static ICanisterConfiguration? RegisterSimpleHtmlToPdf(this ICanisterConfiguration? bootstrapper) Parameters bootstrapper ICanisterConfiguration The bootstrapper. Returns ICanisterConfiguration"
  },
  "api/Microsoft.Extensions.DependencyInjection.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.html",
    "title": "Namespace Microsoft.Extensions.DependencyInjection | Simple Html To Pdf API Reference",
    "summary": "Namespace Microsoft.Extensions.DependencyInjection Classes SimpleHtmlToPdfRegistration Registration extension methods"
  },
  "api/SimpleHtmlToPdf.Attributes.WkHtmlAttribute.html": {
    "href": "api/SimpleHtmlToPdf.Attributes.WkHtmlAttribute.html",
    "title": "Class WkHtmlAttribute | Simple Html To Pdf API Reference",
    "summary": "Class WkHtmlAttribute Namespace SimpleHtmlToPdf.Attributes Assembly SimpleHtmlToPdf.dll Wkhtml attribute [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public sealed class WkHtmlAttribute : Attribute Inheritance object Attribute WkHtmlAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors WkHtmlAttribute(string) Initializes a new instance of the WkHtmlAttribute class. public WkHtmlAttribute(string name) Parameters name string The name. Properties Name Gets the name. public string Name { get; } Property Value string The name. See Also Attribute"
  },
  "api/SimpleHtmlToPdf.Attributes.html": {
    "href": "api/SimpleHtmlToPdf.Attributes.html",
    "title": "Namespace SimpleHtmlToPdf.Attributes | Simple Html To Pdf API Reference",
    "summary": "Namespace SimpleHtmlToPdf.Attributes Classes WkHtmlAttribute Wkhtml attribute"
  },
  "api/SimpleHtmlToPdf.BaseClasses.ConverterBaseClass.html": {
    "href": "api/SimpleHtmlToPdf.BaseClasses.ConverterBaseClass.html",
    "title": "Class ConverterBaseClass | Simple Html To Pdf API Reference",
    "summary": "Class ConverterBaseClass Namespace SimpleHtmlToPdf.BaseClasses Assembly SimpleHtmlToPdf.dll Converter base class public abstract class ConverterBaseClass : IConverter Inheritance object ConverterBaseClass Implements IConverter Derived HtmlConverter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ConverterBaseClass(BindingWrapper) Initializes a new instance of the ConverterBaseClass class. protected ConverterBaseClass(BindingWrapper tools) Parameters tools BindingWrapper The tools. Fields Tools The tools public readonly BindingWrapper Tools Field Value BindingWrapper Methods Convert(IDocument) Converts the specified document. public virtual byte[] Convert(IDocument document) Parameters document IDocument The document. Returns byte[] The document as a PDF byte array. Exceptions ArgumentException No objects is defined in document that was passed. At least one object must be defined. See Also IConverter"
  },
  "api/SimpleHtmlToPdf.BaseClasses.html": {
    "href": "api/SimpleHtmlToPdf.BaseClasses.html",
    "title": "Namespace SimpleHtmlToPdf.BaseClasses | Simple Html To Pdf API Reference",
    "summary": "Namespace SimpleHtmlToPdf.BaseClasses Classes ConverterBaseClass Converter base class"
  },
  "api/SimpleHtmlToPdf.CanisterModules.CanisterModule.html": {
    "href": "api/SimpleHtmlToPdf.CanisterModules.CanisterModule.html",
    "title": "Class CanisterModule | Simple Html To Pdf API Reference",
    "summary": "Class CanisterModule Namespace SimpleHtmlToPdf.CanisterModules Assembly SimpleHtmlToPdf.dll Canister module public class CanisterModule : IModule Inheritance object CanisterModule Implements IModule Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Order Order to run this in public int Order { get; } Property Value int Methods Load(IServiceCollection?) Loads the module using the bootstrapper public void Load(IServiceCollection? bootstrapper) Parameters bootstrapper IServiceCollection The bootstrapper. See Also IModule"
  },
  "api/SimpleHtmlToPdf.CanisterModules.html": {
    "href": "api/SimpleHtmlToPdf.CanisterModules.html",
    "title": "Namespace SimpleHtmlToPdf.CanisterModules | Simple Html To Pdf API Reference",
    "summary": "Namespace SimpleHtmlToPdf.CanisterModules Classes CanisterModule Canister module"
  },
  "api/SimpleHtmlToPdf.Events.ErrorArgs.html": {
    "href": "api/SimpleHtmlToPdf.Events.ErrorArgs.html",
    "title": "Class ErrorArgs | Simple Html To Pdf API Reference",
    "summary": "Class ErrorArgs Namespace SimpleHtmlToPdf.Events Assembly SimpleHtmlToPdf.dll Error args public class ErrorArgs : EventArgs Inheritance object EventArgs ErrorArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Document Gets or sets the document. public IDocument? Document { get; set; } Property Value IDocument The document. Message Gets or sets the message. public string? Message { get; set; } Property Value string The message. See Also EventArgs"
  },
  "api/SimpleHtmlToPdf.Events.FinishedArgs.html": {
    "href": "api/SimpleHtmlToPdf.Events.FinishedArgs.html",
    "title": "Class FinishedArgs | Simple Html To Pdf API Reference",
    "summary": "Class FinishedArgs Namespace SimpleHtmlToPdf.Events Assembly SimpleHtmlToPdf.dll Finished args public class FinishedArgs : EventArgs Inheritance object EventArgs FinishedArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Document Gets or sets the document. public IDocument Document { get; set; } Property Value IDocument The document. Success Gets or sets a value indicating whether this FinishedArgs is success. public bool Success { get; set; } Property Value bool true if success; otherwise, false. See Also EventArgs"
  },
  "api/SimpleHtmlToPdf.Events.html": {
    "href": "api/SimpleHtmlToPdf.Events.html",
    "title": "Namespace SimpleHtmlToPdf.Events | Simple Html To Pdf API Reference",
    "summary": "Namespace SimpleHtmlToPdf.Events Classes ErrorArgs Error args FinishedArgs Finished args"
  },
  "api/SimpleHtmlToPdf.HtmlConverter.html": {
    "href": "api/SimpleHtmlToPdf.HtmlConverter.html",
    "title": "Class HtmlConverter | Simple Html To Pdf API Reference",
    "summary": "Class HtmlConverter Namespace SimpleHtmlToPdf Assembly SimpleHtmlToPdf.dll Html converter public class HtmlConverter : ConverterBaseClass, IConverter Inheritance object ConverterBaseClass HtmlConverter Implements IConverter Inherited Members ConverterBaseClass.Tools object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors HtmlConverter(BindingWrapper) Initializes a new instance of the HtmlConverter class. public HtmlConverter(BindingWrapper bindingWrapper) Parameters bindingWrapper BindingWrapper The binding wrapper. Methods Convert(IDocument) Converts the specified document. public override byte[] Convert(IDocument document) Parameters document IDocument The document. Returns byte[] The document as a PDF byte array. Invoke<TResult>(Func<TResult>) Invokes the specified @delegate. public TResult Invoke<TResult>(Func<TResult> @delegate) Parameters delegate Func<TResult> The @delegate. Returns TResult Type Parameters TResult The type of the result. See Also ConverterBaseClass"
  },
  "api/SimpleHtmlToPdf.HtmlToPdfDocument.html": {
    "href": "api/SimpleHtmlToPdf.HtmlToPdfDocument.html",
    "title": "Class HtmlToPdfDocument | Simple Html To Pdf API Reference",
    "summary": "Class HtmlToPdfDocument Namespace SimpleHtmlToPdf Assembly SimpleHtmlToPdf.dll Html to Pdf document public class HtmlToPdfDocument : IDocument, ISettings Inheritance object HtmlToPdfDocument Implements IDocument ISettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors HtmlToPdfDocument() Initializes a new instance of the HtmlToPdfDocument class. public HtmlToPdfDocument() Properties GlobalSettings Gets or sets the global settings. public GlobalSettings GlobalSettings { get; set; } Property Value GlobalSettings The global settings. Objects Gets the objects. public List<ObjectSettings> Objects { get; } Property Value List<ObjectSettings> The objects. Methods GetObjects() Gets the objects. public IEnumerable<IObject> GetObjects() Returns IEnumerable<IObject> The objects in a document. See Also IDocument"
  },
  "api/SimpleHtmlToPdf.Interfaces.IConverter.html": {
    "href": "api/SimpleHtmlToPdf.Interfaces.IConverter.html",
    "title": "Interface IConverter | Simple Html To Pdf API Reference",
    "summary": "Interface IConverter Namespace SimpleHtmlToPdf.Interfaces Assembly SimpleHtmlToPdf.dll Converter interface public interface IConverter Methods Convert(IDocument) Converts the specified document. byte[] Convert(IDocument document) Parameters document IDocument The document. Returns byte[] The document as a PDF byte array."
  },
  "api/SimpleHtmlToPdf.Interfaces.IDocument.html": {
    "href": "api/SimpleHtmlToPdf.Interfaces.IDocument.html",
    "title": "Interface IDocument | Simple Html To Pdf API Reference",
    "summary": "Interface IDocument Namespace SimpleHtmlToPdf.Interfaces Assembly SimpleHtmlToPdf.dll Document interface public interface IDocument : ISettings Methods GetObjects() Gets the objects. IEnumerable<IObject> GetObjects() Returns IEnumerable<IObject> The objects in a document."
  },
  "api/SimpleHtmlToPdf.Interfaces.IObject.html": {
    "href": "api/SimpleHtmlToPdf.Interfaces.IObject.html",
    "title": "Interface IObject | Simple Html To Pdf API Reference",
    "summary": "Interface IObject Namespace SimpleHtmlToPdf.Interfaces Assembly SimpleHtmlToPdf.dll Object interface public interface IObject : ISettings Methods GetContent() Gets the content. byte[] GetContent() Returns byte[] The content"
  },
  "api/SimpleHtmlToPdf.Interfaces.ISettings.html": {
    "href": "api/SimpleHtmlToPdf.Interfaces.ISettings.html",
    "title": "Interface ISettings | Simple Html To Pdf API Reference",
    "summary": "Interface ISettings Namespace SimpleHtmlToPdf.Interfaces Assembly SimpleHtmlToPdf.dll Settings interface public interface ISettings"
  },
  "api/SimpleHtmlToPdf.Interfaces.html": {
    "href": "api/SimpleHtmlToPdf.Interfaces.html",
    "title": "Namespace SimpleHtmlToPdf.Interfaces | Simple Html To Pdf API Reference",
    "summary": "Namespace SimpleHtmlToPdf.Interfaces Interfaces IConverter Converter interface IDocument Document interface IObject Object interface ISettings Settings interface"
  },
  "api/SimpleHtmlToPdf.Settings.Enums.ColorMode.html": {
    "href": "api/SimpleHtmlToPdf.Settings.Enums.ColorMode.html",
    "title": "Enum ColorMode | Simple Html To Pdf API Reference",
    "summary": "Enum ColorMode Namespace SimpleHtmlToPdf.Settings.Enums Assembly SimpleHtmlToPdf.dll Color mode public enum ColorMode Fields Color = 0 The color Grayscale = 1 The grayscale"
  },
  "api/SimpleHtmlToPdf.Settings.Enums.ContentErrorHandling.html": {
    "href": "api/SimpleHtmlToPdf.Settings.Enums.ContentErrorHandling.html",
    "title": "Enum ContentErrorHandling | Simple Html To Pdf API Reference",
    "summary": "Enum ContentErrorHandling Namespace SimpleHtmlToPdf.Settings.Enums Assembly SimpleHtmlToPdf.dll Content error handling public enum ContentErrorHandling Fields Abort = 0 The abort Ignore = 2 The ignore Skip = 1 The skip"
  },
  "api/SimpleHtmlToPdf.Settings.Enums.Orientation.html": {
    "href": "api/SimpleHtmlToPdf.Settings.Enums.Orientation.html",
    "title": "Enum Orientation | Simple Html To Pdf API Reference",
    "summary": "Enum Orientation Namespace SimpleHtmlToPdf.Settings.Enums Assembly SimpleHtmlToPdf.dll Orientation public enum Orientation Fields Landscape = 0 The landscape Portrait = 1 The portrait"
  },
  "api/SimpleHtmlToPdf.Settings.Enums.PechkinPaperSize.html": {
    "href": "api/SimpleHtmlToPdf.Settings.Enums.PechkinPaperSize.html",
    "title": "Class PechkinPaperSize | Simple Html To Pdf API Reference",
    "summary": "Class PechkinPaperSize Namespace SimpleHtmlToPdf.Settings.Enums Assembly SimpleHtmlToPdf.dll Penchkin paper size public class PechkinPaperSize Inheritance object PechkinPaperSize Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PechkinPaperSize(string, string) Initializes a new instance of the PechkinPaperSize class. public PechkinPaperSize(string width, string height) Parameters width string The width. height string The height. Properties Height Gets or sets the height. public string Height { get; set; } Property Value string The height. Width Gets or sets the width. public string Width { get; set; } Property Value string The width. Operators implicit operator PechkinPaperSize(PaperKind) Performs an implicit conversion from PaperKind to PechkinPaperSize. public static implicit operator PechkinPaperSize(PaperKind paperKind) Parameters paperKind PaperKind Kind of the paper. Returns PechkinPaperSize The result of the conversion."
  },
  "api/SimpleHtmlToPdf.Settings.Enums.Unit.html": {
    "href": "api/SimpleHtmlToPdf.Settings.Enums.Unit.html",
    "title": "Enum Unit | Simple Html To Pdf API Reference",
    "summary": "Enum Unit Namespace SimpleHtmlToPdf.Settings.Enums Assembly SimpleHtmlToPdf.dll Units public enum Unit Fields Centimeters = 2 The centimeters Inches = 0 The inches Millimeters = 1 The millimeters"
  },
  "api/SimpleHtmlToPdf.Settings.Enums.html": {
    "href": "api/SimpleHtmlToPdf.Settings.Enums.html",
    "title": "Namespace SimpleHtmlToPdf.Settings.Enums | Simple Html To Pdf API Reference",
    "summary": "Namespace SimpleHtmlToPdf.Settings.Enums Classes PechkinPaperSize Penchkin paper size Enums ColorMode Color mode ContentErrorHandling Content error handling Orientation Orientation Unit Units"
  },
  "api/SimpleHtmlToPdf.Settings.FooterSettings.html": {
    "href": "api/SimpleHtmlToPdf.Settings.FooterSettings.html",
    "title": "Class FooterSettings | Simple Html To Pdf API Reference",
    "summary": "Class FooterSettings Namespace SimpleHtmlToPdf.Settings Assembly SimpleHtmlToPdf.dll Footer settings public class FooterSettings : ISettings Inheritance object FooterSettings Implements ISettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Center The text to print in the right part of the footer, note that some sequences are replaced in this string, see the wkhtmltopdf manual. Default = \"\" [WkHtml(\"footer.center\")] public string Center { get; set; } Property Value string The center. FontName The name of the font to use for the footer. Default = \"Ariel\" [WkHtml(\"footer.fontName\")] public string FontName { get; set; } Property Value string The name of the font. FontSize The font size to use for the footer. Default = 12 [WkHtml(\"footer.fontSize\")] public int? FontSize { get; set; } Property Value int? The size of the font. HtmUrl Url for a HTML document to use for the footer. Default = \"\" [WkHtml(\"footer.htmlUrl\")] public string HtmUrl { get; set; } Property Value string The HTM URL. Left The string to print in the left part of the footer, note that some sequences are replaced in this string, see the wkhtmltopdf manual. Default = \"\" [WkHtml(\"footer.left\")] public string Left { get; set; } Property Value string The left. Line Whether a line should be printed above the footer. Default = false [WkHtml(\"footer.line\")] public bool? Line { get; set; } Property Value bool? The line. Right The text to print in the right part of the footer, note that some sequences are replaced in this string, see the wkhtmltopdf manual. Default = \"\" [WkHtml(\"footer.right\")] public string Right { get; set; } Property Value string The right. Spacing The amount of space to put between the footer and the content, e.g. \"1.8\". Be aware that if this is too large the footer will be printed outside the pdf document. This can be corrected with the margin.bottom setting. Default = 0.00 [WkHtml(\"footer.spacing\")] public double? Spacing { get; set; } Property Value double? The spacing. See Also ISettings"
  },
  "api/SimpleHtmlToPdf.Settings.GlobalSettings.html": {
    "href": "api/SimpleHtmlToPdf.Settings.GlobalSettings.html",
    "title": "Class GlobalSettings | Simple Html To Pdf API Reference",
    "summary": "Class GlobalSettings Namespace SimpleHtmlToPdf.Settings Assembly SimpleHtmlToPdf.dll Global settings public class GlobalSettings : ISettings Inheritance object GlobalSettings Implements ISettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Collate Should the copies be collated. Default = true [WkHtml(\"collate\")] public bool? Collate { get; set; } Property Value bool? The collate. ColorMode Should the output be printed in color or gray scale, must be either \"Color\" or \"Grayscale\". Default = \"color\" [WkHtml(\"colorMode\")] public ColorMode? ColorMode { get; set; } Property Value ColorMode? The color mode. CookieJar Path of file used to load and store cookies. Default = \"\" [WkHtml(\"load.cookieJar\")] public string? CookieJar { get; set; } Property Value string The cookie jar. Copies How many copies should we print. Default = 1 [WkHtml(\"copies\")] public int? Copies { get; set; } Property Value int? The copies. DPI What dpi should we use when printing. Default = 96 [WkHtml(\"dpi\")] public int? DPI { get; set; } Property Value int? The dpi. DocumentTitle The title of the PDF document. Default = \"\" [WkHtml(\"documentTitle\")] public string? DocumentTitle { get; set; } Property Value string The document title. DumpOutline If not set to the empty string a XML representation of the outline is dumped to this file. Default = \"\" [WkHtml(\"dumpOutline\")] public string? DumpOutline { get; set; } Property Value string The dump outline. ImageDPI The maximal DPI to use for images in the pdf document. Default = 600 [WkHtml(\"imageDPI\")] public int? ImageDPI { get; set; } Property Value int? The image dpi. ImageQuality The jpeg compression factor to use when producing the pdf document. Default = 94 [WkHtml(\"imageQuality\")] public int? ImageQuality { get; set; } Property Value int? The image quality. Margins Gets or sets the margins. public MarginSettings Margins { get; set; } Property Value MarginSettings The margins. Orientation The orientation of the output document, must be either \"Landscape\" or \"Portrait\". Default = \"portrait\" [WkHtml(\"orientation\")] public Orientation? Orientation { get; set; } Property Value Orientation? The orientation. Out The path of the output file, if \"-\" output is sent to stdout, if empty the output is stored in a buffer. Default = \"\" [WkHtml(\"out\")] public string? Out { get; set; } Property Value string The out. Outline Should a outline (table of content in the sidebar) be generated and put into the PDF. Default = true [WkHtml(\"outline\")] public bool? Outline { get; set; } Property Value bool? The outline. OutlineDepth The maximal depth of the outline. Default = 4 [WkHtml(\"outlineDepth\")] public int? OutlineDepth { get; set; } Property Value int? The outline depth. PageOffset A number that is added to all page numbers when printing headers, footers and table of content. Default = 0 [WkHtml(\"pageOffset\")] public int? PageOffset { get; set; } Property Value int? The page offset. PaperSize Size of output paper public PechkinPaperSize? PaperSize { get; set; } Property Value PechkinPaperSize The size of the paper. UseCompression Should we use loss less compression when creating the pdf file. Default = true [WkHtml(\"useCompression\")] public bool? UseCompression { get; set; } Property Value bool? The use compression. ViewportSize Set viewport size. Not supported in wkhtmltopdf API since v0.12.2.4 [WkHtml(\"viewportSize\")] public string? ViewportSize { get; set; } Property Value string The size of the viewport. See Also ISettings"
  },
  "api/SimpleHtmlToPdf.Settings.HeaderSettings.html": {
    "href": "api/SimpleHtmlToPdf.Settings.HeaderSettings.html",
    "title": "Class HeaderSettings | Simple Html To Pdf API Reference",
    "summary": "Class HeaderSettings Namespace SimpleHtmlToPdf.Settings Assembly SimpleHtmlToPdf.dll Header settings public class HeaderSettings : ISettings Inheritance object HeaderSettings Implements ISettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Center The text to print in the right part of the header, note that some sequences are replaced in this string, see the wkhtmltopdf manual. Default = \"\" [WkHtml(\"header.center\")] public string Center { get; set; } Property Value string FontName The name of the font to use for the header. Default = \"Ariel\" [WkHtml(\"header.fontName\")] public string FontName { get; set; } Property Value string FontSize The font size to use for the header. Default = 12 [WkHtml(\"header.fontSize\")] public int? FontSize { get; set; } Property Value int? HtmUrl Url for a HTML document to use for the header. Default = \"\" [WkHtml(\"header.htmlUrl\")] public string HtmUrl { get; set; } Property Value string Left The string to print in the left part of the header, note that some sequences are replaced in this string, see the wkhtmltopdf manual. Default = \"\" [WkHtml(\"header.left\")] public string Left { get; set; } Property Value string Line Whether a line should be printed under the header. Default = false [WkHtml(\"header.line\")] public bool? Line { get; set; } Property Value bool? Right The text to print in the right part of the header, note that some sequences are replaced in this string, see the wkhtmltopdf manual. Default = \"\" [WkHtml(\"header.right\")] public string Right { get; set; } Property Value string Spacing The amount of space to put between the header and the content, e.g. \"1.8\". Be aware that if this is too large the header will be printed outside the pdf document. This can be corrected with the margin.top setting. Default = 0.00 [WkHtml(\"header.spacing\")] public double? Spacing { get; set; } Property Value double? See Also ISettings"
  },
  "api/SimpleHtmlToPdf.Settings.LoadSettings.html": {
    "href": "api/SimpleHtmlToPdf.Settings.LoadSettings.html",
    "title": "Class LoadSettings | Simple Html To Pdf API Reference",
    "summary": "Class LoadSettings Namespace SimpleHtmlToPdf.Settings Assembly SimpleHtmlToPdf.dll Load settings public class LoadSettings : ISettings Inheritance object LoadSettings Implements ISettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties BlockLocalFileAccess Disallow local and piped files to access other local files. Default = false [WkHtml(\"load.blockLocalFileAccess\")] public bool? BlockLocalFileAccess { get; set; } Property Value bool? The block local file access. Cookies Cookies used when requesting page. Default = empty [WkHtml(\"load.cookies\")] public Dictionary<string, string> Cookies { get; set; } Property Value Dictionary<string, string> The cookies. CustomHeaders Custom headers used when requesting page. Defaulty = empty [WkHtml(\"load.customHeaders\")] public Dictionary<string, string> CustomHeaders { get; set; } Property Value Dictionary<string, string> The custom headers. DebugJavascript Forward javascript warnings and errors to the warning callback. Default = false [WkHtml(\"load.debugJavascript\")] public bool? DebugJavascript { get; set; } Property Value bool? The debug javascript. JSDelay The mount of time in milliseconds to wait after a page has done loading until it is actually printed. E.g. \"1200\". We will wait this amount of time or until, javascript calls window.print(). Default = 200 [WkHtml(\"load.jsdelay\")] public int? JSDelay { get; set; } Property Value int? The js delay. LoadErrorHandling How should we handle obejcts that fail to load. Default = Abort [WkHtml(\"load.loadErrorHandling\")] public ContentErrorHandling? LoadErrorHandling { get; set; } Property Value ContentErrorHandling? The load error handling. Password The password to used when logging into a website. Default = \"\" [WkHtml(\"load.password\")] public string Password { get; set; } Property Value string Proxy String describing what proxy to use when loading the object. Default = \"\" [WkHtml(\"load.proxy\")] public string Proxy { get; set; } Property Value string The proxy. RepeatCustomHeaders Should the custom headers be sent all elements loaded instead of only the main page. Default = false [WkHtml(\"load.repeatCustomHeaders\")] public bool? RepeatCustomHeaders { get; set; } Property Value bool? The repeat custom headers. StopSlowScript Stop slow running javascript. Default = true [WkHtml(\"load.stopSlowScript\")] public bool? StopSlowScript { get; set; } Property Value bool? The stop slow script. Username The user name to use when loging into a website. Default = \"\" [WkHtml(\"load.username\")] public string Username { get; set; } Property Value string The username. ZoomFactor How much should we zoom in on the content. Default = 1.0 [WkHtml(\"load.zoomFactor\")] public double? ZoomFactor { get; set; } Property Value double? The zoom factor. See Also ISettings"
  },
  "api/SimpleHtmlToPdf.Settings.MarginSettings.html": {
    "href": "api/SimpleHtmlToPdf.Settings.MarginSettings.html",
    "title": "Class MarginSettings | Simple Html To Pdf API Reference",
    "summary": "Class MarginSettings Namespace SimpleHtmlToPdf.Settings Assembly SimpleHtmlToPdf.dll Margin settings public class MarginSettings Inheritance object MarginSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MarginSettings() Initializes a new instance of the MarginSettings class. public MarginSettings() MarginSettings(double, double, double, double) Initializes a new instance of the MarginSettings class. public MarginSettings(double top, double right, double bottom, double left) Parameters top double The top. right double The right. bottom double The bottom. left double The left. Properties Bottom Gets or sets the bottom. public double? Bottom { get; set; } Property Value double? The bottom. Left Gets or sets the left. public double? Left { get; set; } Property Value double? The left. Right Gets or sets the right. public double? Right { get; set; } Property Value double? The right. Top Gets or sets the top. public double? Top { get; set; } Property Value double? The top. Unit Gets or sets the unit. public Unit Unit { get; set; } Property Value Unit The unit. Methods GetMarginValue(double?) Gets the margin value. public string? GetMarginValue(double? value) Parameters value double? The value. Returns string"
  },
  "api/SimpleHtmlToPdf.Settings.ObjectSettings.html": {
    "href": "api/SimpleHtmlToPdf.Settings.ObjectSettings.html",
    "title": "Class ObjectSettings | Simple Html To Pdf API Reference",
    "summary": "Class ObjectSettings Namespace SimpleHtmlToPdf.Settings Assembly SimpleHtmlToPdf.dll Object settings public class ObjectSettings : IObject, ISettings Inheritance object ObjectSettings Implements IObject ISettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties FooterSettings Gets or sets the footer settings. public FooterSettings FooterSettings { get; set; } Property Value FooterSettings The footer settings. HeaderSettings Gets or sets the header settings. public HeaderSettings HeaderSettings { get; set; } Property Value HeaderSettings The header settings. HtmlContent Gets or sets the content of the HTML. public string HtmlContent { get; set; } Property Value string The content of the HTML. IncludeInOutline Should the sections from this document be included in the outline and table of content. Default = false [WkHtml(\"includeInOutline\")] public bool? IncludeInOutline { get; set; } Property Value bool? The include in outline. LoadSettings Gets or sets the load settings. public LoadSettings LoadSettings { get; set; } Property Value LoadSettings The load settings. Page The URL or path of the web page to convert, if \"-\" input is read from stdin. Default = \"\" [WkHtml(\"page\")] public string Page { get; set; } Property Value string The page. PagesCount Should we count the pages of this document, in the counter used for TOC, headers and footers. Default = false [WkHtml(\"pagesCount\")] public bool? PagesCount { get; set; } Property Value bool? The pages count. ProduceForms Should we turn HTML forms into PDF forms. Default = false [WkHtml(\"produceForms\")] public bool? ProduceForms { get; set; } Property Value bool? The produce forms. UseExternalLinks Should external links in the HTML document be converted into external pdf links. Default = true [WkHtml(\"useExternalLinks\")] public bool? UseExternalLinks { get; set; } Property Value bool? The use external links. UseLocalLinks Should internal links in the HTML document be converted into pdf references. Default = true [WkHtml(\"useLocalLinks\")] public bool? UseLocalLinks { get; set; } Property Value bool? The use local links. WebSettings Gets or sets the web settings. public WebSettings WebSettings { get; set; } Property Value WebSettings The web settings. Methods GetContent() Gets the content. public byte[] GetContent() Returns byte[] The content See Also IObject"
  },
  "api/SimpleHtmlToPdf.Settings.WebSettings.html": {
    "href": "api/SimpleHtmlToPdf.Settings.WebSettings.html",
    "title": "Class WebSettings | Simple Html To Pdf API Reference",
    "summary": "Class WebSettings Namespace SimpleHtmlToPdf.Settings Assembly SimpleHtmlToPdf.dll Web settings public class WebSettings : ISettings Inheritance object WebSettings Implements ISettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Background Should we print the background. Default = true [WkHtml(\"web.background\")] public bool? Background { get; set; } Property Value bool? The background. DefaultEncoding What encoding should we guess content is using if they do not specify it properly. Default = \"\" [WkHtml(\"web.defaultEncoding\")] public string DefaultEncoding { get; set; } Property Value string The default encoding. EnableIntelligentShrinking Should we enable intelligent shrinkng to fit more content on one page. Has no effect for wkhtmltoimage. Default = true [WkHtml(\"web.enableIntelligentShrinking\")] public bool? EnableIntelligentShrinking { get; set; } Property Value bool? The enable intelligent shrinking. EnableJavascript Should we enable javascript. Default = true [WkHtml(\"web.enableJavascript\")] public bool? EnableJavascript { get; set; } Property Value bool? The enable javascript. EnablePlugins Should we enable NS plugins. Enabling this will have limited success. Default = false [WkHtml(\"web.enablePlugins\")] public bool? EnablePlugins { get; set; } Property Value bool? The enable plugins. LoadImages Should we load images. Default = true [WkHtml(\"web.loadImages\")] public bool? LoadImages { get; set; } Property Value bool? The load images. MinimumFontSize The minimum font size allowed. Default = -1 [WkHtml(\"web.minimumFontSize\")] public int? MinimumFontSize { get; set; } Property Value int? The minimum size of the font. PrintMediaType Should the content be printed using the print media type instead of the screen media type. Default = false [WkHtml(\"web.printMediaType\")] public bool? PrintMediaType { get; set; } Property Value bool? The type of the print media. UserStyleSheet Url or path to a user specified style sheet. Default = \"\" [WkHtml(\"web.userStyleSheet\")] public string UserStyleSheet { get; set; } Property Value string The user style sheet. See Also ISettings"
  },
  "api/SimpleHtmlToPdf.Settings.html": {
    "href": "api/SimpleHtmlToPdf.Settings.html",
    "title": "Namespace SimpleHtmlToPdf.Settings | Simple Html To Pdf API Reference",
    "summary": "Namespace SimpleHtmlToPdf.Settings Classes FooterSettings Footer settings GlobalSettings Global settings HeaderSettings Header settings LoadSettings Load settings MarginSettings Margin settings ObjectSettings Object settings WebSettings Web settings"
  },
  "api/SimpleHtmlToPdf.UnmanagedHandler.BindingWrapper.html": {
    "href": "api/SimpleHtmlToPdf.UnmanagedHandler.BindingWrapper.html",
    "title": "Class BindingWrapper | Simple Html To Pdf API Reference",
    "summary": "Class BindingWrapper Namespace SimpleHtmlToPdf.UnmanagedHandler Assembly SimpleHtmlToPdf.dll Binding wrapper public class BindingWrapper : IDisposable Inheritance object BindingWrapper Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BindingWrapper() Initializes a new instance of the BindingWrapper class. public BindingWrapper() Properties IsLoaded Gets a value indicating whether this instance is loaded. public bool IsLoaded { get; } Property Value bool true if this instance is loaded; otherwise, false. Methods AddObject(nint, nint, byte[]) Adds the object. public void AddObject(nint converter, nint objectSettings, byte[] data) Parameters converter nint The converter. objectSettings nint The object settings. data byte[] The data. AddObject(nint, nint, string) Adds the object. public void AddObject(nint converter, nint objectSettings, string data) Parameters converter nint The converter. objectSettings nint The object settings. data string The data. CreateConverter(nint) Creates the converter. public nint CreateConverter(nint globalSettings) Parameters globalSettings nint The global settings. Returns nint CreateGlobalSettings() Creates the global settings. public nint CreateGlobalSettings() Returns nint CreateObjectSettings() Creates the object settings. public nint CreateObjectSettings() Returns nint DestroyConverter(nint) Destroys the converter. public void DestroyConverter(nint converter) Parameters converter nint The converter. DestroyGlobalSetting(nint) Destroys the global setting. public void DestroyGlobalSetting(nint settings) Parameters settings nint The settings. DestroyObjectSetting(nint) Destroys the object setting. public void DestroyObjectSetting(nint settings) Parameters settings nint The settings. DoConversion(nint) Does the conversion. public bool DoConversion(nint converter) Parameters converter nint The converter. Returns bool ExtendedQt() Extendeds the qt. public bool ExtendedQt() Returns bool ~BindingWrapper() Finalizes an instance of the BindingWrapper class. protected ~BindingWrapper() GetConversionResult(nint) Gets the conversion result. public byte[] GetConversionResult(nint converter) Parameters converter nint The converter. Returns byte[] GetCurrentPhase(nint) Gets the current phase. public int GetCurrentPhase(nint converter) Parameters converter nint The converter. Returns int GetGlobalSetting(nint, string) Gets the global setting. public string GetGlobalSetting(nint settings, string name) Parameters settings nint The settings. name string The name. Returns string GetLibraryVersion() Gets the library version. public string GetLibraryVersion() Returns string GetObjectSetting(nint, string) Gets the object setting. public string GetObjectSetting(nint settings, string name) Parameters settings nint The settings. name string The name. Returns string GetPhaseCount(nint) Gets the phase count. public int GetPhaseCount(nint converter) Parameters converter nint The converter. Returns int GetPhaseDescription(nint, int) Gets the phase description. public string GetPhaseDescription(nint converter, int phase) Parameters converter nint The converter. phase int The phase. Returns string GetProgressString(nint) Gets the progress string. public string GetProgressString(nint converter) Parameters converter nint The converter. Returns string Load() Loads this instance. public void Load() SetErrorCallback(nint, StringCallback) Sets the error callback. public int SetErrorCallback(nint converter, StringCallback callback) Parameters converter nint The converter. callback StringCallback The callback. Returns int SetFinishedCallback(nint, IntCallback) Sets the finished callback. public int SetFinishedCallback(nint converter, IntCallback callback) Parameters converter nint The converter. callback IntCallback The callback. Returns int SetGlobalSetting(nint, string, string) Sets the global setting. public int SetGlobalSetting(nint settings, string name, string value) Parameters settings nint The settings. name string The name. value string The value. Returns int SetObjectSetting(nint, string, string) Sets the object setting. public int SetObjectSetting(nint settings, string name, string value) Parameters settings nint The settings. name string The name. value string The value. Returns int SetPhaseChangedCallback(nint, VoidCallback) Sets the phase changed callback. public int SetPhaseChangedCallback(nint converter, VoidCallback callback) Parameters converter nint The converter. callback VoidCallback The callback. Returns int SetProgressChangedCallback(nint, VoidCallback) Sets the progress changed callback. public int SetProgressChangedCallback(nint converter, VoidCallback callback) Parameters converter nint The converter. callback VoidCallback The callback. Returns int SetWarningCallback(nint, StringCallback) Sets the warning callback. public int SetWarningCallback(nint converter, StringCallback callback) Parameters converter nint The converter. callback StringCallback The callback. Returns int See Also IDisposable"
  },
  "api/SimpleHtmlToPdf.UnmanagedHandler.CustomUnmanagedType.html": {
    "href": "api/SimpleHtmlToPdf.UnmanagedHandler.CustomUnmanagedType.html",
    "title": "Enum CustomUnmanagedType | Simple Html To Pdf API Reference",
    "summary": "Enum CustomUnmanagedType Namespace SimpleHtmlToPdf.UnmanagedHandler Assembly SimpleHtmlToPdf.dll Custom unmanaged type public enum CustomUnmanagedType Fields LPUTF8Str = 48 The lput f8 string"
  },
  "api/SimpleHtmlToPdf.UnmanagedHandler.IntCallback.html": {
    "href": "api/SimpleHtmlToPdf.UnmanagedHandler.IntCallback.html",
    "title": "Delegate IntCallback | Simple Html To Pdf API Reference",
    "summary": "Delegate IntCallback Namespace SimpleHtmlToPdf.UnmanagedHandler Assembly SimpleHtmlToPdf.dll Int Callback delegate public delegate void IntCallback(nint converter, int integer) Parameters converter nint The converter. integer int The integer."
  },
  "api/SimpleHtmlToPdf.UnmanagedHandler.Interfaces.IWkHtmlModule.html": {
    "href": "api/SimpleHtmlToPdf.UnmanagedHandler.Interfaces.IWkHtmlModule.html",
    "title": "Interface IWkHtmlModule | Simple Html To Pdf API Reference",
    "summary": "Interface IWkHtmlModule Namespace SimpleHtmlToPdf.UnmanagedHandler.Interfaces Assembly SimpleHtmlToPdf.dll WKHTML Module interface public interface IWkHtmlModule Methods wkhtmltopdf_add_object(nint, nint, byte[]) Wkhtmltopdfs the add object. void wkhtmltopdf_add_object(nint converter, nint objectSettings, byte[] data) Parameters converter nint The converter. objectSettings nint The object settings. data byte[] The data. wkhtmltopdf_add_object(nint, nint, string) Wkhtmltopdfs the add object. void wkhtmltopdf_add_object(nint converter, nint objectSettings, string data) Parameters converter nint The converter. objectSettings nint The object settings. data string The data. wkhtmltopdf_convert(nint) Wkhtmltopdfs the convert. bool wkhtmltopdf_convert(nint converter) Parameters converter nint The converter. Returns bool wkhtmltopdf_create_converter(nint) Wkhtmltopdfs the create converter. nint wkhtmltopdf_create_converter(nint globalSettings) Parameters globalSettings nint The global settings. Returns nint wkhtmltopdf_create_global_settings() Wkhtmltopdfs the create global settings. nint wkhtmltopdf_create_global_settings() Returns nint wkhtmltopdf_create_object_settings() Wkhtmltopdfs the create object settings. nint wkhtmltopdf_create_object_settings() Returns nint wkhtmltopdf_current_phase(nint) Wkhtmltopdfs the current phase. int wkhtmltopdf_current_phase(nint converter) Parameters converter nint The converter. Returns int wkhtmltopdf_deinit() Wkhtmltopdfs the deinit. int wkhtmltopdf_deinit() Returns int wkhtmltopdf_destroy_converter(nint) Wkhtmltopdfs the destroy converter. void wkhtmltopdf_destroy_converter(nint converter) Parameters converter nint The converter. wkhtmltopdf_destroy_global_settings(nint) Wkhtmltopdfs the destroy global settings. int wkhtmltopdf_destroy_global_settings(nint settings) Parameters settings nint The settings. Returns int wkhtmltopdf_destroy_object_settings(nint) Wkhtmltopdfs the destroy object settings. int wkhtmltopdf_destroy_object_settings(nint settings) Parameters settings nint The settings. Returns int wkhtmltopdf_extended_qt() Wkhtmltopdfs the extended qt. int wkhtmltopdf_extended_qt() Returns int wkhtmltopdf_get_global_setting(nint, string, byte[]) Wkhtmltopdfs the get global setting. int wkhtmltopdf_get_global_setting(nint settings, string name, byte[] array) Parameters settings nint The settings. name string The name. array byte[] The array. Returns int wkhtmltopdf_get_object_setting(nint, string, byte[]) Wkhtmltopdfs the get object setting. int wkhtmltopdf_get_object_setting(nint settings, string name, byte[] array) Parameters settings nint The settings. name string The name. array byte[] The array. Returns int wkhtmltopdf_get_output(nint, out nint) Wkhtmltopdfs the get output. int wkhtmltopdf_get_output(nint converter, out nint data) Parameters converter nint The converter. data nint The data. Returns int wkhtmltopdf_http_error_code(nint) Wkhtmltopdfs the HTTP error code. int wkhtmltopdf_http_error_code(nint converter) Parameters converter nint The converter. Returns int wkhtmltopdf_init(int) Wkhtmltopdfs the initialize. int wkhtmltopdf_init(int useGraphics) Parameters useGraphics int The use graphics. Returns int wkhtmltopdf_phase_count(nint) Wkhtmltopdfs the phase count. int wkhtmltopdf_phase_count(nint converter) Parameters converter nint The converter. Returns int wkhtmltopdf_phase_description(nint, int) Wkhtmltopdfs the phase description. nint wkhtmltopdf_phase_description(nint converter, int phase) Parameters converter nint The converter. phase int The phase. Returns nint wkhtmltopdf_progress_string(nint) Wkhtmltopdfs the progress string. nint wkhtmltopdf_progress_string(nint converter) Parameters converter nint The converter. Returns nint wkhtmltopdf_set_error_callback(nint, StringCallback) Wkhtmltopdfs the set error callback. int wkhtmltopdf_set_error_callback(nint converter, StringCallback callback) Parameters converter nint The converter. callback StringCallback The callback. Returns int wkhtmltopdf_set_finished_callback(nint, IntCallback) Wkhtmltopdfs the set finished callback. int wkhtmltopdf_set_finished_callback(nint converter, IntCallback callback) Parameters converter nint The converter. callback IntCallback The callback. Returns int wkhtmltopdf_set_global_setting(nint, string, string) Wkhtmltopdfs the set global setting. int wkhtmltopdf_set_global_setting(nint settings, string name, string value) Parameters settings nint The settings. name string The name. value string The value. Returns int wkhtmltopdf_set_object_setting(nint, string, string) Wkhtmltopdfs the set object setting. int wkhtmltopdf_set_object_setting(nint settings, string name, string value) Parameters settings nint The settings. name string The name. value string The value. Returns int wkhtmltopdf_set_phase_changed_callback(nint, VoidCallback) Wkhtmltopdfs the set phase changed callback. int wkhtmltopdf_set_phase_changed_callback(nint converter, VoidCallback callback) Parameters converter nint The converter. callback VoidCallback The callback. Returns int wkhtmltopdf_set_progress_changed_callback(nint, VoidCallback) Wkhtmltopdfs the set progress changed callback. int wkhtmltopdf_set_progress_changed_callback(nint converter, VoidCallback callback) Parameters converter nint The converter. callback VoidCallback The callback. Returns int wkhtmltopdf_set_warning_callback(nint, StringCallback) Wkhtmltopdfs the set warning callback. int wkhtmltopdf_set_warning_callback(nint converter, StringCallback callback) Parameters converter nint The converter. callback StringCallback The callback. Returns int wkhtmltopdf_version() Wkhtmltopdfs the version. nint wkhtmltopdf_version() Returns nint"
  },
  "api/SimpleHtmlToPdf.UnmanagedHandler.Interfaces.html": {
    "href": "api/SimpleHtmlToPdf.UnmanagedHandler.Interfaces.html",
    "title": "Namespace SimpleHtmlToPdf.UnmanagedHandler.Interfaces | Simple Html To Pdf API Reference",
    "summary": "Namespace SimpleHtmlToPdf.UnmanagedHandler.Interfaces Interfaces IWkHtmlModule WKHTML Module interface"
  },
  "api/SimpleHtmlToPdf.UnmanagedHandler.PaperKind.html": {
    "href": "api/SimpleHtmlToPdf.UnmanagedHandler.PaperKind.html",
    "title": "Enum PaperKind | Simple Html To Pdf API Reference",
    "summary": "Enum PaperKind Namespace SimpleHtmlToPdf.UnmanagedHandler Assembly SimpleHtmlToPdf.dll Enumaration of paper kinds from http://msdn.microsoft.com/en-us/library/system.drawing.printing.paperkind.aspx Implemented here because Syste.Drawing.Printing is not ported to NET Core public enum PaperKind Fields A2 = 66 Summary: A2 paper (420 mm by 594 mm). A3 = 8 Summary: A3 paper (297 mm by 420 mm). A3Extra = 63 Summary: A3 extra paper (322 mm by 445 mm). A3ExtraTransverse = 68 Summary: A3 extra transverse paper (322 mm by 445 mm). A3Rotated = 76 Summary: A3 rotated paper (420 mm by 297 mm). A3Transverse = 67 Summary: A3 transverse paper (297 mm by 420 mm). A4 = 9 Summary: A4 paper (210 mm by 297 mm). A4Extra = 53 Summary: A4 extra paper (236 mm by 322 mm). This value is specific to the PostScript driver and is used only by Linotronic printers to help save paper. A4Plus = 60 Summary: A4 plus paper (210 mm by 330 mm). A4Rotated = 77 Summary: A4 rotated paper (297 mm by 210 mm). Requires Windows 98, Windows NT 4.0, or later. A4Small = 10 Summary: A4 small paper (210 mm by 297 mm). A4Transverse = 55 Summary: A4 transverse paper (210 mm by 297 mm). A5 = 11 Summary: A5 paper (148 mm by 210 mm). A5Extra = 64 Summary: A5 extra paper (174 mm by 235 mm). A5Rotated = 78 Summary: A5 rotated paper (210 mm by 148 mm). Requires Windows 98, Windows NT 4.0, or later. A5Transverse = 61 Summary: A5 transverse paper (148 mm by 210 mm). A6 = 70 Summary: A6 paper (105 mm by 148 mm). Requires Windows 98, Windows NT 4.0, or later. A6Rotated = 83 Summary: A6 rotated paper (148 mm by 105 mm). Requires Windows 98, Windows NT 4.0, or later. APlus = 57 Summary: SuperA/SuperA/A4 paper (227 mm by 356 mm). B4 = 12 Summary: B4 paper (250 mm by 353 mm). B4Envelope = 33 Summary: B4 envelope (250 mm by 353 mm). B4JisRotated = 79 Summary: JIS B4 rotated paper (364 mm by 257 mm). Requires Windows 98, Windows NT 4.0, or later. B5 = 13 Summary: B5 paper (176 mm by 250 mm). B5Envelope = 34 Summary: B5 envelope (176 mm by 250 mm). B5Extra = 65 Summary: ISO B5 extra paper (201 mm by 276 mm). B5JisRotated = 80 Summary: JIS B5 rotated paper (257 mm by 182 mm). Requires Windows 98, Windows NT 4.0, or later. B5Transverse = 62 Summary: JIS B5 transverse paper (182 mm by 257 mm). B6Envelope = 35 Summary: B6 envelope (176 mm by 125 mm). B6Jis = 88 Summary: JIS B6 paper (128 mm by 182 mm). Requires Windows 98, Windows NT 4.0, or later. B6JisRotated = 89 Summary: JIS B6 rotated paper (182 mm by 128 mm). Requires Windows 98, Windows NT 4.0, or later. BPlus = 58 Summary: SuperB/SuperB/A3 paper (305 mm by 487 mm). C3Envelope = 29 Summary: C3 envelope (324 mm by 458 mm). C4Envelope = 30 Summary: C4 envelope (229 mm by 324 mm). C5Envelope = 28 Summary: C5 envelope (162 mm by 229 mm). C65Envelope = 32 Summary: C65 envelope (114 mm by 229 mm). C6Envelope = 31 Summary: C6 envelope (114 mm by 162 mm). CSheet = 24 Summary: C paper (17 in. by 22 in.). Custom = 0 Summary: The paper size is defined by the user. DLEnvelope = 27 Summary: DL envelope (110 mm by 220 mm). DSheet = 25 Summary: D paper (22 in. by 34 in.). ESheet = 26 Summary: E paper (34 in. by 44 in.). Executive = 7 Summary: Executive paper (7.25 in. by 10.5 in.). Folio = 14 Summary: Folio paper (8.5 in. by 13 in.). GermanLegalFanfold = 41 Summary: German legal fanfold (8.5 in. by 13 in.). GermanStandardFanfold = 40 Summary: German standard fanfold (8.5 in. by 12 in.). InviteEnvelope = 47 Summary: Invitation envelope (220 mm by 220 mm). IsoB4 = 42 Summary: ISO B4 (250 mm by 353 mm). ItalyEnvelope = 36 Summary: Italy envelope (110 mm by 230 mm). JapaneseDoublePostcard = 69 Summary: Japanese double postcard (200 mm by 148 mm). Requires Windows 98, Windows NT 4.0, or later. JapaneseDoublePostcardRotated = 82 Summary: Japanese rotated double postcard (148 mm by 200 mm). Requires Windows 98, Windows NT 4.0, or later. JapaneseEnvelopeChouNumber3 = 73 Summary: Japanese Chou #3 envelope. Requires Windows 98, Windows NT 4.0, or later. JapaneseEnvelopeChouNumber3Rotated = 86 Summary: Japanese rotated Chou #3 envelope. Requires Windows 98, Windows NT 4.0, or later. JapaneseEnvelopeChouNumber4 = 74 Summary: Japanese Chou #4 envelope. Requires Windows 98, Windows NT 4.0, or later. JapaneseEnvelopeChouNumber4Rotated = 87 Summary: Japanese rotated Chou #4 envelope. Requires Windows 98, Windows NT 4.0, or later. JapaneseEnvelopeKakuNumber2 = 71 Summary: Japanese Kaku #2 envelope. Requires Windows 98, Windows NT 4.0, or later. JapaneseEnvelopeKakuNumber2Rotated = 84 Summary: Japanese rotated Kaku #2 envelope. Requires Windows 98, Windows NT 4.0, or later. JapaneseEnvelopeKakuNumber3 = 72 Summary: Japanese Kaku #3 envelope. Requires Windows 98, Windows NT 4.0, or later. JapaneseEnvelopeKakuNumber3Rotated = 85 Summary: Japanese rotated Kaku #3 envelope. Requires Windows 98, Windows NT 4.0, or later. JapaneseEnvelopeYouNumber4 = 91 Summary: Japanese You #4 envelope. Requires Windows 98, Windows NT 4.0, or later. JapaneseEnvelopeYouNumber4Rotated = 92 Summary: Japanese You #4 rotated envelope. Requires Windows 98, Windows NT 4.0, or later. JapanesePostcard = 43 Summary: Japanese postcard (100 mm by 148 mm). JapanesePostcardRotated = 81 Summary: Japanese rotated postcard (148 mm by 100 mm). Requires Windows 98, Windows NT 4.0, or later. Ledger = 4 Summary: Ledger paper (17 in. by 11 in.). Legal = 5 Summary: Legal paper (8.5 in. by 14 in.). LegalExtra = 51 Summary: Legal extra paper (9.275 in. by 15 in.). This value is specific to the PostScript driver and is used only by Linotronic printers in order to conserve paper. Letter = 1 Summary: Letter paper (8.5 in. by 11 in.). LetterExtra = 50 Summary: Letter extra paper (9.275 in. by 12 in.). This value is specific to the PostScript driver and is used only by Linotronic printers in order to conserve paper. LetterExtraTransverse = 56 Summary: Letter extra transverse paper (9.275 in. by 12 in.). LetterPlus = 59 Summary: Letter plus paper (8.5 in. by 12.69 in.). LetterRotated = 75 Summary: Letter rotated paper (11 in. by 8.5 in.). LetterSmall = 2 Summary: Letter small paper (8.5 in. by 11 in.). LetterTransverse = 54 Summary: Letter transverse paper (8.275 in. by 11 in.). MonarchEnvelope = 37 Summary: Monarch envelope (3.875 in. by 7.5 in.). Note = 18 Summary: Note paper (8.5 in. by 11 in.). Number10Envelope = 20 Summary: #10 envelope (4.125 in. by 9.5 in.). Number11Envelope = 21 Summary: #11 envelope (4.5 in. by 10.375 in.). Number12Envelope = 22 Summary: #12 envelope (4.75 in. by 11 in.). Number14Envelope = 23 Summary: #14 envelope (5 in. by 11.5 in.). Number9Envelope = 19 Summary: #9 envelope (3.875 in. by 8.875 in.). PersonalEnvelope = 38 Summary: 6 3/4 envelope (3.625 in. by 6.5 in.). Prc16K = 93 Summary: People's Republic of China 16K paper (146 mm by 215 mm). Requires Windows 98, Windows NT 4.0, or later. Prc16KRotated = 106 Summary: People's Republic of China 16K rotated paper (146 mm by 215 mm). Requires Windows 98, Windows NT 4.0, or later. Prc32K = 94 Summary: People's Republic of China 32K paper (97 mm by 151 mm). Requires Windows 98, Windows NT 4.0, or later. Prc32KBig = 95 Summary: People's Republic of China 32K big paper (97 mm by 151 mm). Requires Windows 98, Windows NT 4.0, or later. Prc32KBigRotated = 108 Summary: People's Republic of China 32K big rotated paper (97 mm by 151 mm). Requires Windows 98, Windows NT 4.0, or later. Prc32KRotated = 107 Summary: People's Republic of China 32K rotated paper (97 mm by 151 mm). Requires Windows 98, Windows NT 4.0, or later. PrcEnvelopeNumber1 = 96 Summary: People's Republic of China #1 envelope (102 mm by 165 mm). Requires Windows 98, Windows NT 4.0, or later. PrcEnvelopeNumber10 = 105 Summary: People's Republic of China #10 envelope (324 mm by 458 mm). Requires Windows 98, Windows NT 4.0, or later. PrcEnvelopeNumber10Rotated = 118 Summary: People's Republic of China #10 rotated envelope (458 mm by 324 mm). Requires Windows 98, Windows NT 4.0, or later. PrcEnvelopeNumber1Rotated = 109 Summary: People's Republic of China #1 rotated envelope (165 mm by 102 mm). Requires Windows 98, Windows NT 4.0, or later. PrcEnvelopeNumber2 = 97 Summary: People's Republic of China #2 envelope (102 mm by 176 mm). Requires Windows 98, Windows NT 4.0, or later. PrcEnvelopeNumber2Rotated = 110 Summary: People's Republic of China #2 rotated envelope (176 mm by 102 mm). Requires Windows 98, Windows NT 4.0, or later. PrcEnvelopeNumber3 = 98 Summary: People's Republic of China #3 envelope (125 mm by 176 mm). Requires Windows 98, Windows NT 4.0, or later. PrcEnvelopeNumber3Rotated = 111 Summary: People's Republic of China #3 rotated envelope (176 mm by 125 mm). Requires Windows 98, Windows NT 4.0, or later. PrcEnvelopeNumber4 = 99 Summary: People's Republic of China #4 envelope (110 mm by 208 mm). Requires Windows 98, Windows NT 4.0, or later. PrcEnvelopeNumber4Rotated = 112 Summary: People's Republic of China #4 rotated envelope (208 mm by 110 mm). Requires Windows 98, Windows NT 4.0, or later. PrcEnvelopeNumber5 = 100 Summary: People's Republic of China #5 envelope (110 mm by 220 mm). Requires Windows 98, Windows NT 4.0, or later. PrcEnvelopeNumber5Rotated = 113 Summary: People's Republic of China Envelope #5 rotated envelope (220 mm by 110 mm). Requires Windows 98, Windows NT 4.0, or later. PrcEnvelopeNumber6 = 101 Summary: People's Republic of China #6 envelope (120 mm by 230 mm). Requires Windows 98, Windows NT 4.0, or later. PrcEnvelopeNumber6Rotated = 114 Summary: People's Republic of China #6 rotated envelope (230 mm by 120 mm). Requires Windows 98, Windows NT 4.0, or later. PrcEnvelopeNumber7 = 102 Summary: People's Republic of China #7 envelope (160 mm by 230 mm). Requires Windows 98, Windows NT 4.0, or later. PrcEnvelopeNumber7Rotated = 115 Summary: People's Republic of China #7 rotated envelope (230 mm by 160 mm). Requires Windows 98, Windows NT 4.0, or later. PrcEnvelopeNumber8 = 103 Summary: People's Republic of China #8 envelope (120 mm by 309 mm). Requires Windows 98, Windows NT 4.0, or later. PrcEnvelopeNumber8Rotated = 116 Summary: People's Republic of China #8 rotated envelope (309 mm by 120 mm). Requires Windows 98, Windows NT 4.0, or later. PrcEnvelopeNumber9 = 104 Summary: People's Republic of China #9 envelope (229 mm by 324 mm). Requires Windows 98, Windows NT 4.0, or later. PrcEnvelopeNumber9Rotated = 117 Summary: People's Republic of China #9 rotated envelope (324 mm by 229 mm). Requires Windows 98, Windows NT 4.0, or later. Quarto = 15 Summary: Quarto paper (215 mm by 275 mm). Standard10x11 = 45 Summary: Standard paper (10 in. by 11 in.). Standard10x14 = 16 Summary: Standard paper (10 in. by 14 in.). Standard11x17 = 17 Summary: Standard paper (11 in. by 17 in.). Standard12x11 = 90 Summary: Standard paper (12 in. by 11 in.). Requires Windows 98, Windows NT 4.0, or later. Standard15x11 = 46 Summary: Standard paper (15 in. by 11 in.). Standard9x11 = 44 Summary: Standard paper (9 in. by 11 in.). Statement = 6 Summary: Statement paper (5.5 in. by 8.5 in.). Tabloid = 3 Summary: Tabloid paper (11 in. by 17 in.). TabloidExtra = 52 Summary: Tabloid extra paper (11.69 in. by 18 in.). This value is specific to the PostScript driver and is used only by Linotronic printers in order to conserve paper. USStandardFanfold = 39 Summary: US standard fanfold (14.875 in. by 11 in.)."
  },
  "api/SimpleHtmlToPdf.UnmanagedHandler.StringCallback.html": {
    "href": "api/SimpleHtmlToPdf.UnmanagedHandler.StringCallback.html",
    "title": "Delegate StringCallback | Simple Html To Pdf API Reference",
    "summary": "Delegate StringCallback Namespace SimpleHtmlToPdf.UnmanagedHandler Assembly SimpleHtmlToPdf.dll String call back delegate public delegate void StringCallback(nint converter, string str) Parameters converter nint The converter. str string The string."
  },
  "api/SimpleHtmlToPdf.UnmanagedHandler.VoidCallback.html": {
    "href": "api/SimpleHtmlToPdf.UnmanagedHandler.VoidCallback.html",
    "title": "Delegate VoidCallback | Simple Html To Pdf API Reference",
    "summary": "Delegate VoidCallback Namespace SimpleHtmlToPdf.UnmanagedHandler Assembly SimpleHtmlToPdf.dll Void callback delegate public delegate void VoidCallback(nint converter) Parameters converter nint The converter."
  },
  "api/SimpleHtmlToPdf.UnmanagedHandler.WkHtmlModule.html": {
    "href": "api/SimpleHtmlToPdf.UnmanagedHandler.WkHtmlModule.html",
    "title": "Class WkHtmlModule | Simple Html To Pdf API Reference",
    "summary": "Class WkHtmlModule Namespace SimpleHtmlToPdf.UnmanagedHandler Assembly SimpleHtmlToPdf.dll WKHTML module public class WkHtmlModule : IWkHtmlModule Inheritance object WkHtmlModule Implements IWkHtmlModule Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods wkhtmltopdf_add_object(nint, nint, byte[]) Wkhtmltopdfs the add object. public void wkhtmltopdf_add_object(nint converter, nint objectSettings, byte[] data) Parameters converter nint The converter. objectSettings nint The object settings. data byte[] The data. wkhtmltopdf_add_object(nint, nint, string) Wkhtmltopdfs the add object. public void wkhtmltopdf_add_object(nint converter, nint objectSettings, string data) Parameters converter nint The converter. objectSettings nint The object settings. data string The data. wkhtmltopdf_convert(nint) Wkhtmltopdfs the convert. public bool wkhtmltopdf_convert(nint converter) Parameters converter nint The converter. Returns bool wkhtmltopdf_create_converter(nint) Wkhtmltopdfs the create converter. public nint wkhtmltopdf_create_converter(nint globalSettings) Parameters globalSettings nint The global settings. Returns nint wkhtmltopdf_create_global_settings() Wkhtmltopdfs the create global settings. public nint wkhtmltopdf_create_global_settings() Returns nint wkhtmltopdf_create_object_settings() Wkhtmltopdfs the create object settings. public nint wkhtmltopdf_create_object_settings() Returns nint wkhtmltopdf_current_phase(nint) Wkhtmltopdfs the current phase. public int wkhtmltopdf_current_phase(nint converter) Parameters converter nint The converter. Returns int wkhtmltopdf_deinit() Wkhtmltopdfs the deinit. public int wkhtmltopdf_deinit() Returns int wkhtmltopdf_destroy_converter(nint) Wkhtmltopdfs the destroy converter. public void wkhtmltopdf_destroy_converter(nint converter) Parameters converter nint The converter. wkhtmltopdf_destroy_global_settings(nint) Wkhtmltopdfs the destroy global settings. public int wkhtmltopdf_destroy_global_settings(nint settings) Parameters settings nint The settings. Returns int wkhtmltopdf_destroy_object_settings(nint) Wkhtmltopdfs the destroy object settings. public int wkhtmltopdf_destroy_object_settings(nint settings) Parameters settings nint The settings. Returns int wkhtmltopdf_extended_qt() Wkhtmltopdfs the extended qt. public int wkhtmltopdf_extended_qt() Returns int wkhtmltopdf_get_global_setting(nint, string, byte[]) Wkhtmltopdfs the get global setting. public int wkhtmltopdf_get_global_setting(nint settings, string name, byte[] array) Parameters settings nint The settings. name string The name. array byte[] The array. Returns int wkhtmltopdf_get_object_setting(nint, string, byte[]) Wkhtmltopdfs the get object setting. public int wkhtmltopdf_get_object_setting(nint settings, string name, byte[] array) Parameters settings nint The settings. name string The name. array byte[] The array. Returns int wkhtmltopdf_get_output(nint, out nint) Wkhtmltopdfs the get output. public int wkhtmltopdf_get_output(nint converter, out nint data) Parameters converter nint The converter. data nint The data. Returns int wkhtmltopdf_http_error_code(nint) Wkhtmltopdfs the HTTP error code. public int wkhtmltopdf_http_error_code(nint converter) Parameters converter nint The converter. Returns int wkhtmltopdf_init(int) Wkhtmltopdfs the initialize. public int wkhtmltopdf_init(int useGraphics) Parameters useGraphics int The use graphics. Returns int wkhtmltopdf_phase_count(nint) Wkhtmltopdfs the phase count. public int wkhtmltopdf_phase_count(nint converter) Parameters converter nint The converter. Returns int wkhtmltopdf_phase_description(nint, int) Wkhtmltopdfs the phase description. public nint wkhtmltopdf_phase_description(nint converter, int phase) Parameters converter nint The converter. phase int The phase. Returns nint wkhtmltopdf_progress_string(nint) Wkhtmltopdfs the progress string. public nint wkhtmltopdf_progress_string(nint converter) Parameters converter nint The converter. Returns nint wkhtmltopdf_set_error_callback(nint, StringCallback) Wkhtmltopdfs the set error callback. public int wkhtmltopdf_set_error_callback(nint converter, StringCallback callback) Parameters converter nint The converter. callback StringCallback The callback. Returns int wkhtmltopdf_set_finished_callback(nint, IntCallback) Wkhtmltopdfs the set finished callback. public int wkhtmltopdf_set_finished_callback(nint converter, IntCallback callback) Parameters converter nint The converter. callback IntCallback The callback. Returns int wkhtmltopdf_set_global_setting(nint, string, string) Wkhtmltopdfs the set global setting. public int wkhtmltopdf_set_global_setting(nint settings, string name, string value) Parameters settings nint The settings. name string The name. value string The value. Returns int wkhtmltopdf_set_object_setting(nint, string, string) Wkhtmltopdfs the set object setting. public int wkhtmltopdf_set_object_setting(nint settings, string name, string value) Parameters settings nint The settings. name string The name. value string The value. Returns int wkhtmltopdf_set_phase_changed_callback(nint, VoidCallback) Wkhtmltopdfs the set phase changed callback. public int wkhtmltopdf_set_phase_changed_callback(nint converter, VoidCallback callback) Parameters converter nint The converter. callback VoidCallback The callback. Returns int wkhtmltopdf_set_progress_changed_callback(nint, VoidCallback) Wkhtmltopdfs the set progress changed callback. public int wkhtmltopdf_set_progress_changed_callback(nint converter, VoidCallback callback) Parameters converter nint The converter. callback VoidCallback The callback. Returns int wkhtmltopdf_set_warning_callback(nint, StringCallback) Wkhtmltopdfs the set warning callback. public int wkhtmltopdf_set_warning_callback(nint converter, StringCallback callback) Parameters converter nint The converter. callback StringCallback The callback. Returns int wkhtmltopdf_version() Wkhtmltopdfs the version. public nint wkhtmltopdf_version() Returns nint See Also IWkHtmlModule"
  },
  "api/SimpleHtmlToPdf.UnmanagedHandler.html": {
    "href": "api/SimpleHtmlToPdf.UnmanagedHandler.html",
    "title": "Namespace SimpleHtmlToPdf.UnmanagedHandler | Simple Html To Pdf API Reference",
    "summary": "Namespace SimpleHtmlToPdf.UnmanagedHandler Classes BindingWrapper Binding wrapper WkHtmlModule WKHTML module Enums CustomUnmanagedType Custom unmanaged type PaperKind Enumaration of paper kinds from http://msdn.microsoft.com/en-us/library/system.drawing.printing.paperkind.aspx Implemented here because Syste.Drawing.Printing is not ported to NET Core Delegates IntCallback Int Callback delegate StringCallback String call back delegate VoidCallback Void callback delegate"
  },
  "api/SimpleHtmlToPdf.html": {
    "href": "api/SimpleHtmlToPdf.html",
    "title": "Namespace SimpleHtmlToPdf | Simple Html To Pdf API Reference",
    "summary": "Namespace SimpleHtmlToPdf Classes HtmlConverter Html converter HtmlToPdfDocument Html to Pdf document"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "Welcome | Simple Html To Pdf API Reference",
    "summary": "Welcome Welcome to the API browser."
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Code | Simple Html To Pdf API Reference",
    "summary": "Code using Microsoft.AspNetCore.Mvc; using SimpleHtmlToPdf.Interfaces; using SimpleHtmlToPdf.Settings; using SimpleHtmlToPdf.Settings.Enums; using SimpleHtmlToPdf.UnmanagedHandler; namespace SimpleHtmlToPdf.WebApp.net6.Controllers { /// <summary> /// The controller used to generate PDFs. /// </summary> /// <seealso cref=\"Controller\"/> public class HomeController : Controller { /// <summary> /// Initializes a new instance of the <see cref=\"HomeController\"/> class. /// </summary> /// <param name=\"converter\">The converter.</param> public HomeController(IConverter converter) { Converter = converter; } /// <summary> /// The converter instance to use for converting HTML to PDF. /// </summary> /// <value>The converter instance to use for converting HTML to PDF.</value> private IConverter Converter { get; } /// <summary> /// Our PDF generation endpoint /// </summary> /// <returns>The PDF file</returns> public IActionResult TestPDF() { // Define the HTML-to-PDF request input var doc = new HtmlToPdfDocument() { GlobalSettings = { // Color mode of the output file ColorMode = ColorMode.Color, // Orientation of the output file Orientation = Orientation.Landscape, // Paper size of the output file PaperSize = PaperKind.A4Plus, }, Objects = { new ObjectSettings() { // HTML content to convert HtmlContent = \"<html><body>Test</body></html>\", // The default encoding used. WebSettings = { DefaultEncoding = \"utf-8\" }, }, } }; // Convert our HTML document to a PDF document var pdf = Converter.Convert(doc); // Send the PDF file to the browser return File(pdf, \"application/pdf\", \"Test.pdf\"); } } }"
  },
  "index.html": {
    "href": "index.html",
    "title": "Simple HTML to PDF | Simple Html To Pdf API Reference",
    "summary": "Simple HTML to PDF Simple HTML to PDF is a lightweight NuGet package that provides a simple HTML to PDF converter library for .NET projects. It allows you to easily convert HTML content to PDF documents using the wkhtmltopdf command-line tool. Installation You can install the Simple HTML to PDF package via NuGet Package Manager or by using the .NET CLI. NuGet Package Manager Open the NuGet Package Manager in Visual Studio. Search for \"SimpleHtmlToPdf\" and select the package. Click on the \"Install\" button to install the package into your project. .NET CLI Execute the following command in the terminal: dotnet add package SimpleHtmlToPdf Usage To use the Simple HTML to PDF library in your project, follow these steps: Install the Simple HTML to PDF package (as described in the Installation section). Add it to your project's IoC container: services.AddSimpleHtmlToPdf(); Replace services with the actual IServiceCollection instance in your project. Ask for an instance of the IConverter class from the system's IoC: public HomeController(IConverter converter) { ... } Convert an HTML string to a PDF document: // Define the HTML-to-PDF request input var doc = new HtmlToPdfDocument() { GlobalSettings = { // Color mode of the output file ColorMode = ColorMode.Color, // Orientation of the output file Orientation = Orientation.Landscape, // Paper size of the output file PaperSize = PaperKind.A4Plus, }, Objects = { new ObjectSettings() { // HTML content to convert HtmlContent = \"<html><body>Test</body></html>\", // The default encoding used. WebSettings = { DefaultEncoding = \"utf-8\" }, }, } }; // Convert our HTML document to a PDF document var pdf = Converter.Convert(doc); Replace HtmlContent with the actual HTML content you want to convert. Send the PDF file to the browser: return File(pdf, \"application/pdf\", \"Test.pdf\"); Customize based on your requirements. Contributing Contributions are welcome! If you'd like to contribute to this project, please follow these steps: Fork the repository. Create a new branch: git checkout -b feature/your-feature-name Make your changes and commit them: git commit -m \"Add your commit message\" Push your changes to your forked repository: git push origin feature/your-feature-name Open a pull request in this repository, and provide a detailed description of your changes. License This project is licensed under the Apache 2 License. Acknowledgments The wkhtmltopdf tool, which enables HTML to PDF conversion. The DinkToPDF library, which provided the initial code."
  }
}