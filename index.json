{
  "api/Microsoft.Extensions.DependencyInjection.SimpleHtmlToPdfRegistration.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.SimpleHtmlToPdfRegistration.html",
    "title": "Class SimpleHtmlToPdfRegistration | Simple Html To Pdf API Reference",
    "keywords": "Class SimpleHtmlToPdfRegistration Registration extension methods Inheritance object SimpleHtmlToPdfRegistration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Microsoft.Extensions.DependencyInjection Assembly: SimpleHtmlToPdf.dll Syntax public static class SimpleHtmlToPdfRegistration Methods | Improve this Doc View Source AddSimpleHtmlToPdf(IServiceCollection?) Registers the simple HTML to PDF. Declaration public static IServiceCollection? AddSimpleHtmlToPdf(this IServiceCollection? serviceDescriptors) Parameters Type Name Description IServiceCollection serviceDescriptors The service descriptors. Returns Type Description IServiceCollection | Improve this Doc View Source RegisterSimpleHtmlToPdf(ICanisterConfiguration?) Registers the simple HTML to PDF. Declaration public static ICanisterConfiguration? RegisterSimpleHtmlToPdf(this ICanisterConfiguration? bootstrapper) Parameters Type Name Description ICanisterConfiguration bootstrapper The bootstrapper. Returns Type Description ICanisterConfiguration"
  },
  "api/Microsoft.Extensions.DependencyInjection.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.html",
    "title": "Namespace Microsoft.Extensions.DependencyInjection | Simple Html To Pdf API Reference",
    "keywords": "Namespace Microsoft.Extensions.DependencyInjection Classes SimpleHtmlToPdfRegistration Registration extension methods"
  },
  "api/SimpleHtmlToPdf.Attributes.WkHtmlAttribute.html": {
    "href": "api/SimpleHtmlToPdf.Attributes.WkHtmlAttribute.html",
    "title": "Class WkHtmlAttribute | Simple Html To Pdf API Reference",
    "keywords": "Class WkHtmlAttribute Wkhtml attribute Inheritance object Attribute WkHtmlAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: SimpleHtmlToPdf.Attributes Assembly: SimpleHtmlToPdf.dll Syntax [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public sealed class WkHtmlAttribute : Attribute Constructors | Improve this Doc View Source WkHtmlAttribute(string) Initializes a new instance of the WkHtmlAttribute class. Declaration public WkHtmlAttribute(string name) Parameters Type Name Description string name The name. See Also Attribute Properties | Improve this Doc View Source Name Gets the name. Declaration public string Name { get; } Property Value Type Description string The name. See Also Attribute See Also Attribute"
  },
  "api/SimpleHtmlToPdf.Attributes.html": {
    "href": "api/SimpleHtmlToPdf.Attributes.html",
    "title": "Namespace SimpleHtmlToPdf.Attributes | Simple Html To Pdf API Reference",
    "keywords": "Namespace SimpleHtmlToPdf.Attributes Classes WkHtmlAttribute Wkhtml attribute"
  },
  "api/SimpleHtmlToPdf.BaseClasses.ConverterBaseClass.html": {
    "href": "api/SimpleHtmlToPdf.BaseClasses.ConverterBaseClass.html",
    "title": "Class ConverterBaseClass | Simple Html To Pdf API Reference",
    "keywords": "Class ConverterBaseClass Converter base class Inheritance object ConverterBaseClass HtmlConverter Implements IConverter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SimpleHtmlToPdf.BaseClasses Assembly: SimpleHtmlToPdf.dll Syntax public abstract class ConverterBaseClass : IConverter Constructors | Improve this Doc View Source ConverterBaseClass(BindingWrapper) Initializes a new instance of the ConverterBaseClass class. Declaration protected ConverterBaseClass(BindingWrapper tools) Parameters Type Name Description BindingWrapper tools The tools. See Also IConverter Fields | Improve this Doc View Source Tools The tools Declaration public readonly BindingWrapper Tools Field Value Type Description BindingWrapper See Also IConverter Methods | Improve this Doc View Source Convert(IDocument) Converts the specified document. Declaration public virtual byte[] Convert(IDocument document) Parameters Type Name Description IDocument document The document. Returns Type Description byte[] The document as a PDF byte array. Exceptions Type Condition ArgumentException No objects is defined in document that was passed. At least one object must be defined. See Also IConverter Implements IConverter See Also IConverter"
  },
  "api/SimpleHtmlToPdf.BaseClasses.html": {
    "href": "api/SimpleHtmlToPdf.BaseClasses.html",
    "title": "Namespace SimpleHtmlToPdf.BaseClasses | Simple Html To Pdf API Reference",
    "keywords": "Namespace SimpleHtmlToPdf.BaseClasses Classes ConverterBaseClass Converter base class"
  },
  "api/SimpleHtmlToPdf.CanisterModules.CanisterModule.html": {
    "href": "api/SimpleHtmlToPdf.CanisterModules.CanisterModule.html",
    "title": "Class CanisterModule | Simple Html To Pdf API Reference",
    "keywords": "Class CanisterModule Canister module Inheritance object CanisterModule Implements IModule Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SimpleHtmlToPdf.CanisterModules Assembly: SimpleHtmlToPdf.dll Syntax public class CanisterModule : IModule Properties | Improve this Doc View Source Order Order to run this in Declaration public int Order { get; } Property Value Type Description int See Also IModule Methods | Improve this Doc View Source Load(IServiceCollection?) Loads the module using the bootstrapper Declaration public void Load(IServiceCollection? bootstrapper) Parameters Type Name Description IServiceCollection bootstrapper The bootstrapper. See Also IModule Implements IModule See Also IModule"
  },
  "api/SimpleHtmlToPdf.CanisterModules.html": {
    "href": "api/SimpleHtmlToPdf.CanisterModules.html",
    "title": "Namespace SimpleHtmlToPdf.CanisterModules | Simple Html To Pdf API Reference",
    "keywords": "Namespace SimpleHtmlToPdf.CanisterModules Classes CanisterModule Canister module"
  },
  "api/SimpleHtmlToPdf.Events.ErrorArgs.html": {
    "href": "api/SimpleHtmlToPdf.Events.ErrorArgs.html",
    "title": "Class ErrorArgs | Simple Html To Pdf API Reference",
    "keywords": "Class ErrorArgs Error args Inheritance object EventArgs ErrorArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SimpleHtmlToPdf.Events Assembly: SimpleHtmlToPdf.dll Syntax public class ErrorArgs : EventArgs Properties | Improve this Doc View Source Document Gets or sets the document. Declaration public IDocument? Document { get; set; } Property Value Type Description IDocument The document. See Also EventArgs | Improve this Doc View Source Message Gets or sets the message. Declaration public string? Message { get; set; } Property Value Type Description string The message. See Also EventArgs See Also EventArgs"
  },
  "api/SimpleHtmlToPdf.Events.FinishedArgs.html": {
    "href": "api/SimpleHtmlToPdf.Events.FinishedArgs.html",
    "title": "Class FinishedArgs | Simple Html To Pdf API Reference",
    "keywords": "Class FinishedArgs Finished args Inheritance object EventArgs FinishedArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SimpleHtmlToPdf.Events Assembly: SimpleHtmlToPdf.dll Syntax public class FinishedArgs : EventArgs Properties | Improve this Doc View Source Document Gets or sets the document. Declaration public IDocument Document { get; set; } Property Value Type Description IDocument The document. See Also EventArgs | Improve this Doc View Source Success Gets or sets a value indicating whether this FinishedArgs is success. Declaration public bool Success { get; set; } Property Value Type Description bool true if success; otherwise, false. See Also EventArgs See Also EventArgs"
  },
  "api/SimpleHtmlToPdf.Events.html": {
    "href": "api/SimpleHtmlToPdf.Events.html",
    "title": "Namespace SimpleHtmlToPdf.Events | Simple Html To Pdf API Reference",
    "keywords": "Namespace SimpleHtmlToPdf.Events Classes ErrorArgs Error args FinishedArgs Finished args"
  },
  "api/SimpleHtmlToPdf.HtmlConverter.html": {
    "href": "api/SimpleHtmlToPdf.HtmlConverter.html",
    "title": "Class HtmlConverter | Simple Html To Pdf API Reference",
    "keywords": "Class HtmlConverter Html converter Inheritance object ConverterBaseClass HtmlConverter Implements IConverter Inherited Members ConverterBaseClass.Tools object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SimpleHtmlToPdf Assembly: SimpleHtmlToPdf.dll Syntax public class HtmlConverter : ConverterBaseClass, IConverter Constructors | Improve this Doc View Source HtmlConverter(BindingWrapper) Initializes a new instance of the HtmlConverter class. Declaration public HtmlConverter(BindingWrapper bindingWrapper) Parameters Type Name Description BindingWrapper bindingWrapper The binding wrapper. See Also ConverterBaseClass Methods | Improve this Doc View Source Convert(IDocument) Converts the specified document. Declaration public override byte[] Convert(IDocument document) Parameters Type Name Description IDocument document The document. Returns Type Description byte[] The document as a PDF byte array. Overrides ConverterBaseClass.Convert(IDocument) See Also ConverterBaseClass | Improve this Doc View Source Invoke<TResult>(Func<TResult>) Invokes the specified @delegate. Declaration public TResult Invoke<TResult>(Func<TResult> @delegate) Parameters Type Name Description Func<TResult> delegate The @delegate. Returns Type Description TResult Type Parameters Name Description TResult The type of the result. See Also ConverterBaseClass Implements IConverter See Also ConverterBaseClass"
  },
  "api/SimpleHtmlToPdf.HtmlToPdfDocument.html": {
    "href": "api/SimpleHtmlToPdf.HtmlToPdfDocument.html",
    "title": "Class HtmlToPdfDocument | Simple Html To Pdf API Reference",
    "keywords": "Class HtmlToPdfDocument Html to Pdf document Inheritance object HtmlToPdfDocument Implements IDocument ISettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SimpleHtmlToPdf Assembly: SimpleHtmlToPdf.dll Syntax public class HtmlToPdfDocument : IDocument, ISettings Constructors | Improve this Doc View Source HtmlToPdfDocument() Initializes a new instance of the HtmlToPdfDocument class. Declaration public HtmlToPdfDocument() See Also IDocument Properties | Improve this Doc View Source GlobalSettings Gets or sets the global settings. Declaration public GlobalSettings GlobalSettings { get; set; } Property Value Type Description GlobalSettings The global settings. See Also IDocument | Improve this Doc View Source Objects Gets the objects. Declaration public List<ObjectSettings> Objects { get; } Property Value Type Description List<ObjectSettings> The objects. See Also IDocument Methods | Improve this Doc View Source GetObjects() Gets the objects. Declaration public IEnumerable<IObject> GetObjects() Returns Type Description IEnumerable<IObject> The objects in a document. See Also IDocument Implements IDocument ISettings See Also IDocument"
  },
  "api/SimpleHtmlToPdf.Interfaces.IConverter.html": {
    "href": "api/SimpleHtmlToPdf.Interfaces.IConverter.html",
    "title": "Interface IConverter | Simple Html To Pdf API Reference",
    "keywords": "Interface IConverter Converter interface Namespace: SimpleHtmlToPdf.Interfaces Assembly: SimpleHtmlToPdf.dll Syntax public interface IConverter Methods | Improve this Doc View Source Convert(IDocument) Converts the specified document. Declaration byte[] Convert(IDocument document) Parameters Type Name Description IDocument document The document. Returns Type Description byte[] The document as a PDF byte array."
  },
  "api/SimpleHtmlToPdf.Interfaces.IDocument.html": {
    "href": "api/SimpleHtmlToPdf.Interfaces.IDocument.html",
    "title": "Interface IDocument | Simple Html To Pdf API Reference",
    "keywords": "Interface IDocument Document interface Namespace: SimpleHtmlToPdf.Interfaces Assembly: SimpleHtmlToPdf.dll Syntax public interface IDocument : ISettings Methods | Improve this Doc View Source GetObjects() Gets the objects. Declaration IEnumerable<IObject> GetObjects() Returns Type Description IEnumerable<IObject> The objects in a document."
  },
  "api/SimpleHtmlToPdf.Interfaces.IObject.html": {
    "href": "api/SimpleHtmlToPdf.Interfaces.IObject.html",
    "title": "Interface IObject | Simple Html To Pdf API Reference",
    "keywords": "Interface IObject Object interface Namespace: SimpleHtmlToPdf.Interfaces Assembly: SimpleHtmlToPdf.dll Syntax public interface IObject : ISettings Methods | Improve this Doc View Source GetContent() Gets the content. Declaration byte[] GetContent() Returns Type Description byte[] The content"
  },
  "api/SimpleHtmlToPdf.Interfaces.ISettings.html": {
    "href": "api/SimpleHtmlToPdf.Interfaces.ISettings.html",
    "title": "Interface ISettings | Simple Html To Pdf API Reference",
    "keywords": "Interface ISettings Settings interface Namespace: SimpleHtmlToPdf.Interfaces Assembly: SimpleHtmlToPdf.dll Syntax public interface ISettings"
  },
  "api/SimpleHtmlToPdf.Interfaces.html": {
    "href": "api/SimpleHtmlToPdf.Interfaces.html",
    "title": "Namespace SimpleHtmlToPdf.Interfaces | Simple Html To Pdf API Reference",
    "keywords": "Namespace SimpleHtmlToPdf.Interfaces Interfaces IConverter Converter interface IDocument Document interface IObject Object interface ISettings Settings interface"
  },
  "api/SimpleHtmlToPdf.Settings.Enums.ColorMode.html": {
    "href": "api/SimpleHtmlToPdf.Settings.Enums.ColorMode.html",
    "title": "Enum ColorMode | Simple Html To Pdf API Reference",
    "keywords": "Enum ColorMode Color mode Namespace: SimpleHtmlToPdf.Settings.Enums Assembly: SimpleHtmlToPdf.dll Syntax public enum ColorMode Fields Name Description Color The color Grayscale The grayscale"
  },
  "api/SimpleHtmlToPdf.Settings.Enums.ContentErrorHandling.html": {
    "href": "api/SimpleHtmlToPdf.Settings.Enums.ContentErrorHandling.html",
    "title": "Enum ContentErrorHandling | Simple Html To Pdf API Reference",
    "keywords": "Enum ContentErrorHandling Content error handling Namespace: SimpleHtmlToPdf.Settings.Enums Assembly: SimpleHtmlToPdf.dll Syntax public enum ContentErrorHandling Fields Name Description Abort The abort Ignore The ignore Skip The skip"
  },
  "api/SimpleHtmlToPdf.Settings.Enums.Orientation.html": {
    "href": "api/SimpleHtmlToPdf.Settings.Enums.Orientation.html",
    "title": "Enum Orientation | Simple Html To Pdf API Reference",
    "keywords": "Enum Orientation Orientation Namespace: SimpleHtmlToPdf.Settings.Enums Assembly: SimpleHtmlToPdf.dll Syntax public enum Orientation Fields Name Description Landscape The landscape Portrait The portrait"
  },
  "api/SimpleHtmlToPdf.Settings.Enums.PechkinPaperSize.html": {
    "href": "api/SimpleHtmlToPdf.Settings.Enums.PechkinPaperSize.html",
    "title": "Class PechkinPaperSize | Simple Html To Pdf API Reference",
    "keywords": "Class PechkinPaperSize Penchkin paper size Inheritance object PechkinPaperSize Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SimpleHtmlToPdf.Settings.Enums Assembly: SimpleHtmlToPdf.dll Syntax public class PechkinPaperSize Constructors | Improve this Doc View Source PechkinPaperSize(string, string) Initializes a new instance of the PechkinPaperSize class. Declaration public PechkinPaperSize(string width, string height) Parameters Type Name Description string width The width. string height The height. Properties | Improve this Doc View Source Height Gets or sets the height. Declaration public string Height { get; set; } Property Value Type Description string The height. | Improve this Doc View Source Width Gets or sets the width. Declaration public string Width { get; set; } Property Value Type Description string The width. Operators | Improve this Doc View Source implicit operator PechkinPaperSize(PaperKind) Performs an implicit conversion from PaperKind to PechkinPaperSize. Declaration public static implicit operator PechkinPaperSize(PaperKind paperKind) Parameters Type Name Description PaperKind paperKind Kind of the paper. Returns Type Description PechkinPaperSize The result of the conversion."
  },
  "api/SimpleHtmlToPdf.Settings.Enums.Unit.html": {
    "href": "api/SimpleHtmlToPdf.Settings.Enums.Unit.html",
    "title": "Enum Unit | Simple Html To Pdf API Reference",
    "keywords": "Enum Unit Units Namespace: SimpleHtmlToPdf.Settings.Enums Assembly: SimpleHtmlToPdf.dll Syntax public enum Unit Fields Name Description Centimeters The centimeters Inches The inches Millimeters The millimeters"
  },
  "api/SimpleHtmlToPdf.Settings.Enums.html": {
    "href": "api/SimpleHtmlToPdf.Settings.Enums.html",
    "title": "Namespace SimpleHtmlToPdf.Settings.Enums | Simple Html To Pdf API Reference",
    "keywords": "Namespace SimpleHtmlToPdf.Settings.Enums Classes PechkinPaperSize Penchkin paper size Enums ColorMode Color mode ContentErrorHandling Content error handling Orientation Orientation Unit Units"
  },
  "api/SimpleHtmlToPdf.Settings.FooterSettings.html": {
    "href": "api/SimpleHtmlToPdf.Settings.FooterSettings.html",
    "title": "Class FooterSettings | Simple Html To Pdf API Reference",
    "keywords": "Class FooterSettings Footer settings Inheritance object FooterSettings Implements ISettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SimpleHtmlToPdf.Settings Assembly: SimpleHtmlToPdf.dll Syntax public class FooterSettings : ISettings Properties | Improve this Doc View Source Center The text to print in the right part of the footer, note that some sequences are replaced in this string, see the wkhtmltopdf manual. Default = \"\" Declaration [WkHtml(\"footer.center\")] public string Center { get; set; } Property Value Type Description string The center. See Also ISettings | Improve this Doc View Source FontName The name of the font to use for the footer. Default = \"Ariel\" Declaration [WkHtml(\"footer.fontName\")] public string FontName { get; set; } Property Value Type Description string The name of the font. See Also ISettings | Improve this Doc View Source FontSize The font size to use for the footer. Default = 12 Declaration [WkHtml(\"footer.fontSize\")] public int? FontSize { get; set; } Property Value Type Description int? The size of the font. See Also ISettings | Improve this Doc View Source HtmUrl Url for a HTML document to use for the footer. Default = \"\" Declaration [WkHtml(\"footer.htmlUrl\")] public string HtmUrl { get; set; } Property Value Type Description string The HTM URL. See Also ISettings | Improve this Doc View Source Left The string to print in the left part of the footer, note that some sequences are replaced in this string, see the wkhtmltopdf manual. Default = \"\" Declaration [WkHtml(\"footer.left\")] public string Left { get; set; } Property Value Type Description string The left. See Also ISettings | Improve this Doc View Source Line Whether a line should be printed above the footer. Default = false Declaration [WkHtml(\"footer.line\")] public bool? Line { get; set; } Property Value Type Description bool? The line. See Also ISettings | Improve this Doc View Source Right The text to print in the right part of the footer, note that some sequences are replaced in this string, see the wkhtmltopdf manual. Default = \"\" Declaration [WkHtml(\"footer.right\")] public string Right { get; set; } Property Value Type Description string The right. See Also ISettings | Improve this Doc View Source Spacing The amount of space to put between the footer and the content, e.g. \"1.8\". Be aware that if this is too large the footer will be printed outside the pdf document. This can be corrected with the margin.bottom setting. Default = 0.00 Declaration [WkHtml(\"footer.spacing\")] public double? Spacing { get; set; } Property Value Type Description double? The spacing. See Also ISettings Implements ISettings See Also ISettings"
  },
  "api/SimpleHtmlToPdf.Settings.GlobalSettings.html": {
    "href": "api/SimpleHtmlToPdf.Settings.GlobalSettings.html",
    "title": "Class GlobalSettings | Simple Html To Pdf API Reference",
    "keywords": "Class GlobalSettings Global settings Inheritance object GlobalSettings Implements ISettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SimpleHtmlToPdf.Settings Assembly: SimpleHtmlToPdf.dll Syntax public class GlobalSettings : ISettings Properties | Improve this Doc View Source Collate Should the copies be collated. Default = true Declaration [WkHtml(\"collate\")] public bool? Collate { get; set; } Property Value Type Description bool? The collate. See Also ISettings | Improve this Doc View Source ColorMode Should the output be printed in color or gray scale, must be either \"Color\" or \"Grayscale\". Default = \"color\" Declaration [WkHtml(\"colorMode\")] public ColorMode? ColorMode { get; set; } Property Value Type Description ColorMode? The color mode. See Also ISettings | Improve this Doc View Source CookieJar Path of file used to load and store cookies. Default = \"\" Declaration [WkHtml(\"load.cookieJar\")] public string? CookieJar { get; set; } Property Value Type Description string The cookie jar. See Also ISettings | Improve this Doc View Source Copies How many copies should we print. Default = 1 Declaration [WkHtml(\"copies\")] public int? Copies { get; set; } Property Value Type Description int? The copies. See Also ISettings | Improve this Doc View Source DPI What dpi should we use when printing. Default = 96 Declaration [WkHtml(\"dpi\")] public int? DPI { get; set; } Property Value Type Description int? The dpi. See Also ISettings | Improve this Doc View Source DocumentTitle The title of the PDF document. Default = \"\" Declaration [WkHtml(\"documentTitle\")] public string? DocumentTitle { get; set; } Property Value Type Description string The document title. See Also ISettings | Improve this Doc View Source DumpOutline If not set to the empty string a XML representation of the outline is dumped to this file. Default = \"\" Declaration [WkHtml(\"dumpOutline\")] public string? DumpOutline { get; set; } Property Value Type Description string The dump outline. See Also ISettings | Improve this Doc View Source ImageDPI The maximal DPI to use for images in the pdf document. Default = 600 Declaration [WkHtml(\"imageDPI\")] public int? ImageDPI { get; set; } Property Value Type Description int? The image dpi. See Also ISettings | Improve this Doc View Source ImageQuality The jpeg compression factor to use when producing the pdf document. Default = 94 Declaration [WkHtml(\"imageQuality\")] public int? ImageQuality { get; set; } Property Value Type Description int? The image quality. See Also ISettings | Improve this Doc View Source Margins Gets or sets the margins. Declaration public MarginSettings Margins { get; set; } Property Value Type Description MarginSettings The margins. See Also ISettings | Improve this Doc View Source Orientation The orientation of the output document, must be either \"Landscape\" or \"Portrait\". Default = \"portrait\" Declaration [WkHtml(\"orientation\")] public Orientation? Orientation { get; set; } Property Value Type Description Orientation? The orientation. See Also ISettings | Improve this Doc View Source Out The path of the output file, if \"-\" output is sent to stdout, if empty the output is stored in a buffer. Default = \"\" Declaration [WkHtml(\"out\")] public string? Out { get; set; } Property Value Type Description string The out. See Also ISettings | Improve this Doc View Source Outline Should a outline (table of content in the sidebar) be generated and put into the PDF. Default = true Declaration [WkHtml(\"outline\")] public bool? Outline { get; set; } Property Value Type Description bool? The outline. See Also ISettings | Improve this Doc View Source OutlineDepth The maximal depth of the outline. Default = 4 Declaration [WkHtml(\"outlineDepth\")] public int? OutlineDepth { get; set; } Property Value Type Description int? The outline depth. See Also ISettings | Improve this Doc View Source PageOffset A number that is added to all page numbers when printing headers, footers and table of content. Default = 0 Declaration [WkHtml(\"pageOffset\")] public int? PageOffset { get; set; } Property Value Type Description int? The page offset. See Also ISettings | Improve this Doc View Source PaperSize Size of output paper Declaration public PechkinPaperSize? PaperSize { get; set; } Property Value Type Description PechkinPaperSize The size of the paper. See Also ISettings | Improve this Doc View Source UseCompression Should we use loss less compression when creating the pdf file. Default = true Declaration [WkHtml(\"useCompression\")] public bool? UseCompression { get; set; } Property Value Type Description bool? The use compression. See Also ISettings | Improve this Doc View Source ViewportSize Set viewport size. Not supported in wkhtmltopdf API since v0.12.2.4 Declaration [WkHtml(\"viewportSize\")] public string? ViewportSize { get; set; } Property Value Type Description string The size of the viewport. See Also ISettings Implements ISettings See Also ISettings"
  },
  "api/SimpleHtmlToPdf.Settings.HeaderSettings.html": {
    "href": "api/SimpleHtmlToPdf.Settings.HeaderSettings.html",
    "title": "Class HeaderSettings | Simple Html To Pdf API Reference",
    "keywords": "Class HeaderSettings Header settings Inheritance object HeaderSettings Implements ISettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SimpleHtmlToPdf.Settings Assembly: SimpleHtmlToPdf.dll Syntax public class HeaderSettings : ISettings Properties | Improve this Doc View Source Center The text to print in the right part of the header, note that some sequences are replaced in this string, see the wkhtmltopdf manual. Default = \"\" Declaration [WkHtml(\"header.center\")] public string Center { get; set; } Property Value Type Description string See Also ISettings | Improve this Doc View Source FontName The name of the font to use for the header. Default = \"Ariel\" Declaration [WkHtml(\"header.fontName\")] public string FontName { get; set; } Property Value Type Description string See Also ISettings | Improve this Doc View Source FontSize The font size to use for the header. Default = 12 Declaration [WkHtml(\"header.fontSize\")] public int? FontSize { get; set; } Property Value Type Description int? See Also ISettings | Improve this Doc View Source HtmUrl Url for a HTML document to use for the header. Default = \"\" Declaration [WkHtml(\"header.htmlUrl\")] public string HtmUrl { get; set; } Property Value Type Description string See Also ISettings | Improve this Doc View Source Left The string to print in the left part of the header, note that some sequences are replaced in this string, see the wkhtmltopdf manual. Default = \"\" Declaration [WkHtml(\"header.left\")] public string Left { get; set; } Property Value Type Description string See Also ISettings | Improve this Doc View Source Line Whether a line should be printed under the header. Default = false Declaration [WkHtml(\"header.line\")] public bool? Line { get; set; } Property Value Type Description bool? See Also ISettings | Improve this Doc View Source Right The text to print in the right part of the header, note that some sequences are replaced in this string, see the wkhtmltopdf manual. Default = \"\" Declaration [WkHtml(\"header.right\")] public string Right { get; set; } Property Value Type Description string See Also ISettings | Improve this Doc View Source Spacing The amount of space to put between the header and the content, e.g. \"1.8\". Be aware that if this is too large the header will be printed outside the pdf document. This can be corrected with the margin.top setting. Default = 0.00 Declaration [WkHtml(\"header.spacing\")] public double? Spacing { get; set; } Property Value Type Description double? See Also ISettings Implements ISettings See Also ISettings"
  },
  "api/SimpleHtmlToPdf.Settings.LoadSettings.html": {
    "href": "api/SimpleHtmlToPdf.Settings.LoadSettings.html",
    "title": "Class LoadSettings | Simple Html To Pdf API Reference",
    "keywords": "Class LoadSettings Load settings Inheritance object LoadSettings Implements ISettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SimpleHtmlToPdf.Settings Assembly: SimpleHtmlToPdf.dll Syntax public class LoadSettings : ISettings Properties | Improve this Doc View Source BlockLocalFileAccess Disallow local and piped files to access other local files. Default = false Declaration [WkHtml(\"load.blockLocalFileAccess\")] public bool? BlockLocalFileAccess { get; set; } Property Value Type Description bool? The block local file access. See Also ISettings | Improve this Doc View Source Cookies Cookies used when requesting page. Default = empty Declaration [WkHtml(\"load.cookies\")] public Dictionary<string, string> Cookies { get; set; } Property Value Type Description Dictionary<string, string> The cookies. See Also ISettings | Improve this Doc View Source CustomHeaders Custom headers used when requesting page. Defaulty = empty Declaration [WkHtml(\"load.customHeaders\")] public Dictionary<string, string> CustomHeaders { get; set; } Property Value Type Description Dictionary<string, string> The custom headers. See Also ISettings | Improve this Doc View Source DebugJavascript Forward javascript warnings and errors to the warning callback. Default = false Declaration [WkHtml(\"load.debugJavascript\")] public bool? DebugJavascript { get; set; } Property Value Type Description bool? The debug javascript. See Also ISettings | Improve this Doc View Source JSDelay The mount of time in milliseconds to wait after a page has done loading until it is actually printed. E.g. \"1200\". We will wait this amount of time or until, javascript calls window.print(). Default = 200 Declaration [WkHtml(\"load.jsdelay\")] public int? JSDelay { get; set; } Property Value Type Description int? The js delay. See Also ISettings | Improve this Doc View Source LoadErrorHandling How should we handle obejcts that fail to load. Default = Abort Declaration [WkHtml(\"load.loadErrorHandling\")] public ContentErrorHandling? LoadErrorHandling { get; set; } Property Value Type Description ContentErrorHandling? The load error handling. See Also ISettings | Improve this Doc View Source Password The password to used when logging into a website. Default = \"\" Declaration [WkHtml(\"load.password\")] public string Password { get; set; } Property Value Type Description string See Also ISettings | Improve this Doc View Source Proxy String describing what proxy to use when loading the object. Default = \"\" Declaration [WkHtml(\"load.proxy\")] public string Proxy { get; set; } Property Value Type Description string The proxy. See Also ISettings | Improve this Doc View Source RepeatCustomHeaders Should the custom headers be sent all elements loaded instead of only the main page. Default = false Declaration [WkHtml(\"load.repeatCustomHeaders\")] public bool? RepeatCustomHeaders { get; set; } Property Value Type Description bool? The repeat custom headers. See Also ISettings | Improve this Doc View Source StopSlowScript Stop slow running javascript. Default = true Declaration [WkHtml(\"load.stopSlowScript\")] public bool? StopSlowScript { get; set; } Property Value Type Description bool? The stop slow script. See Also ISettings | Improve this Doc View Source Username The user name to use when loging into a website. Default = \"\" Declaration [WkHtml(\"load.username\")] public string Username { get; set; } Property Value Type Description string The username. See Also ISettings | Improve this Doc View Source ZoomFactor How much should we zoom in on the content. Default = 1.0 Declaration [WkHtml(\"load.zoomFactor\")] public double? ZoomFactor { get; set; } Property Value Type Description double? The zoom factor. See Also ISettings Implements ISettings See Also ISettings"
  },
  "api/SimpleHtmlToPdf.Settings.MarginSettings.html": {
    "href": "api/SimpleHtmlToPdf.Settings.MarginSettings.html",
    "title": "Class MarginSettings | Simple Html To Pdf API Reference",
    "keywords": "Class MarginSettings Margin settings Inheritance object MarginSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SimpleHtmlToPdf.Settings Assembly: SimpleHtmlToPdf.dll Syntax public class MarginSettings Constructors | Improve this Doc View Source MarginSettings() Initializes a new instance of the MarginSettings class. Declaration public MarginSettings() | Improve this Doc View Source MarginSettings(double, double, double, double) Initializes a new instance of the MarginSettings class. Declaration public MarginSettings(double top, double right, double bottom, double left) Parameters Type Name Description double top The top. double right The right. double bottom The bottom. double left The left. Properties | Improve this Doc View Source Bottom Gets or sets the bottom. Declaration public double? Bottom { get; set; } Property Value Type Description double? The bottom. | Improve this Doc View Source Left Gets or sets the left. Declaration public double? Left { get; set; } Property Value Type Description double? The left. | Improve this Doc View Source Right Gets or sets the right. Declaration public double? Right { get; set; } Property Value Type Description double? The right. | Improve this Doc View Source Top Gets or sets the top. Declaration public double? Top { get; set; } Property Value Type Description double? The top. | Improve this Doc View Source Unit Gets or sets the unit. Declaration public Unit Unit { get; set; } Property Value Type Description Unit The unit. Methods | Improve this Doc View Source GetMarginValue(double?) Gets the margin value. Declaration public string? GetMarginValue(double? value) Parameters Type Name Description double? value The value. Returns Type Description string"
  },
  "api/SimpleHtmlToPdf.Settings.ObjectSettings.html": {
    "href": "api/SimpleHtmlToPdf.Settings.ObjectSettings.html",
    "title": "Class ObjectSettings | Simple Html To Pdf API Reference",
    "keywords": "Class ObjectSettings Object settings Inheritance object ObjectSettings Implements IObject ISettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SimpleHtmlToPdf.Settings Assembly: SimpleHtmlToPdf.dll Syntax public class ObjectSettings : IObject, ISettings Properties | Improve this Doc View Source FooterSettings Gets or sets the footer settings. Declaration public FooterSettings FooterSettings { get; set; } Property Value Type Description FooterSettings The footer settings. See Also IObject | Improve this Doc View Source HeaderSettings Gets or sets the header settings. Declaration public HeaderSettings HeaderSettings { get; set; } Property Value Type Description HeaderSettings The header settings. See Also IObject | Improve this Doc View Source HtmlContent Gets or sets the content of the HTML. Declaration public string HtmlContent { get; set; } Property Value Type Description string The content of the HTML. See Also IObject | Improve this Doc View Source IncludeInOutline Should the sections from this document be included in the outline and table of content. Default = false Declaration [WkHtml(\"includeInOutline\")] public bool? IncludeInOutline { get; set; } Property Value Type Description bool? The include in outline. See Also IObject | Improve this Doc View Source LoadSettings Gets or sets the load settings. Declaration public LoadSettings LoadSettings { get; set; } Property Value Type Description LoadSettings The load settings. See Also IObject | Improve this Doc View Source Page The URL or path of the web page to convert, if \"-\" input is read from stdin. Default = \"\" Declaration [WkHtml(\"page\")] public string Page { get; set; } Property Value Type Description string The page. See Also IObject | Improve this Doc View Source PagesCount Should we count the pages of this document, in the counter used for TOC, headers and footers. Default = false Declaration [WkHtml(\"pagesCount\")] public bool? PagesCount { get; set; } Property Value Type Description bool? The pages count. See Also IObject | Improve this Doc View Source ProduceForms Should we turn HTML forms into PDF forms. Default = false Declaration [WkHtml(\"produceForms\")] public bool? ProduceForms { get; set; } Property Value Type Description bool? The produce forms. See Also IObject | Improve this Doc View Source UseExternalLinks Should external links in the HTML document be converted into external pdf links. Default = true Declaration [WkHtml(\"useExternalLinks\")] public bool? UseExternalLinks { get; set; } Property Value Type Description bool? The use external links. See Also IObject | Improve this Doc View Source UseLocalLinks Should internal links in the HTML document be converted into pdf references. Default = true Declaration [WkHtml(\"useLocalLinks\")] public bool? UseLocalLinks { get; set; } Property Value Type Description bool? The use local links. See Also IObject | Improve this Doc View Source WebSettings Gets or sets the web settings. Declaration public WebSettings WebSettings { get; set; } Property Value Type Description WebSettings The web settings. See Also IObject Methods | Improve this Doc View Source GetContent() Gets the content. Declaration public byte[] GetContent() Returns Type Description byte[] The content See Also IObject Implements IObject ISettings See Also IObject"
  },
  "api/SimpleHtmlToPdf.Settings.WebSettings.html": {
    "href": "api/SimpleHtmlToPdf.Settings.WebSettings.html",
    "title": "Class WebSettings | Simple Html To Pdf API Reference",
    "keywords": "Class WebSettings Web settings Inheritance object WebSettings Implements ISettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SimpleHtmlToPdf.Settings Assembly: SimpleHtmlToPdf.dll Syntax public class WebSettings : ISettings Properties | Improve this Doc View Source Background Should we print the background. Default = true Declaration [WkHtml(\"web.background\")] public bool? Background { get; set; } Property Value Type Description bool? The background. See Also ISettings | Improve this Doc View Source DefaultEncoding What encoding should we guess content is using if they do not specify it properly. Default = \"\" Declaration [WkHtml(\"web.defaultEncoding\")] public string DefaultEncoding { get; set; } Property Value Type Description string The default encoding. See Also ISettings | Improve this Doc View Source EnableIntelligentShrinking Should we enable intelligent shrinkng to fit more content on one page. Has no effect for wkhtmltoimage. Default = true Declaration [WkHtml(\"web.enableIntelligentShrinking\")] public bool? EnableIntelligentShrinking { get; set; } Property Value Type Description bool? The enable intelligent shrinking. See Also ISettings | Improve this Doc View Source EnableJavascript Should we enable javascript. Default = true Declaration [WkHtml(\"web.enableJavascript\")] public bool? EnableJavascript { get; set; } Property Value Type Description bool? The enable javascript. See Also ISettings | Improve this Doc View Source EnablePlugins Should we enable NS plugins. Enabling this will have limited success. Default = false Declaration [WkHtml(\"web.enablePlugins\")] public bool? EnablePlugins { get; set; } Property Value Type Description bool? The enable plugins. See Also ISettings | Improve this Doc View Source LoadImages Should we load images. Default = true Declaration [WkHtml(\"web.loadImages\")] public bool? LoadImages { get; set; } Property Value Type Description bool? The load images. See Also ISettings | Improve this Doc View Source MinimumFontSize The minimum font size allowed. Default = -1 Declaration [WkHtml(\"web.minimumFontSize\")] public int? MinimumFontSize { get; set; } Property Value Type Description int? The minimum size of the font. See Also ISettings | Improve this Doc View Source PrintMediaType Should the content be printed using the print media type instead of the screen media type. Default = false Declaration [WkHtml(\"web.printMediaType\")] public bool? PrintMediaType { get; set; } Property Value Type Description bool? The type of the print media. See Also ISettings | Improve this Doc View Source UserStyleSheet Url or path to a user specified style sheet. Default = \"\" Declaration [WkHtml(\"web.userStyleSheet\")] public string UserStyleSheet { get; set; } Property Value Type Description string The user style sheet. See Also ISettings Implements ISettings See Also ISettings"
  },
  "api/SimpleHtmlToPdf.Settings.html": {
    "href": "api/SimpleHtmlToPdf.Settings.html",
    "title": "Namespace SimpleHtmlToPdf.Settings | Simple Html To Pdf API Reference",
    "keywords": "Namespace SimpleHtmlToPdf.Settings Classes FooterSettings Footer settings GlobalSettings Global settings HeaderSettings Header settings LoadSettings Load settings MarginSettings Margin settings ObjectSettings Object settings WebSettings Web settings"
  },
  "api/SimpleHtmlToPdf.UnmanagedHandler.BindingWrapper.html": {
    "href": "api/SimpleHtmlToPdf.UnmanagedHandler.BindingWrapper.html",
    "title": "Class BindingWrapper | Simple Html To Pdf API Reference",
    "keywords": "Class BindingWrapper Binding wrapper Inheritance object BindingWrapper Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SimpleHtmlToPdf.UnmanagedHandler Assembly: SimpleHtmlToPdf.dll Syntax public class BindingWrapper : IDisposable Constructors | Improve this Doc View Source BindingWrapper() Initializes a new instance of the BindingWrapper class. Declaration public BindingWrapper() See Also IDisposable Properties | Improve this Doc View Source IsLoaded Gets a value indicating whether this instance is loaded. Declaration public bool IsLoaded { get; } Property Value Type Description bool true if this instance is loaded; otherwise, false. See Also IDisposable Methods | Improve this Doc View Source AddObject(IntPtr, IntPtr, byte[]) Adds the object. Declaration public void AddObject(IntPtr converter, IntPtr objectSettings, byte[] data) Parameters Type Name Description IntPtr converter The converter. IntPtr objectSettings The object settings. byte[] data The data. See Also IDisposable | Improve this Doc View Source AddObject(IntPtr, IntPtr, string) Adds the object. Declaration public void AddObject(IntPtr converter, IntPtr objectSettings, string data) Parameters Type Name Description IntPtr converter The converter. IntPtr objectSettings The object settings. string data The data. See Also IDisposable | Improve this Doc View Source CreateConverter(IntPtr) Creates the converter. Declaration public IntPtr CreateConverter(IntPtr globalSettings) Parameters Type Name Description IntPtr globalSettings The global settings. Returns Type Description IntPtr See Also IDisposable | Improve this Doc View Source CreateGlobalSettings() Creates the global settings. Declaration public IntPtr CreateGlobalSettings() Returns Type Description IntPtr See Also IDisposable | Improve this Doc View Source CreateObjectSettings() Creates the object settings. Declaration public IntPtr CreateObjectSettings() Returns Type Description IntPtr See Also IDisposable | Improve this Doc View Source DestroyConverter(IntPtr) Destroys the converter. Declaration public void DestroyConverter(IntPtr converter) Parameters Type Name Description IntPtr converter The converter. See Also IDisposable | Improve this Doc View Source DestroyGlobalSetting(IntPtr) Destroys the global setting. Declaration public void DestroyGlobalSetting(IntPtr settings) Parameters Type Name Description IntPtr settings The settings. See Also IDisposable | Improve this Doc View Source DestroyObjectSetting(IntPtr) Destroys the object setting. Declaration public void DestroyObjectSetting(IntPtr settings) Parameters Type Name Description IntPtr settings The settings. See Also IDisposable | Improve this Doc View Source DoConversion(IntPtr) Does the conversion. Declaration public bool DoConversion(IntPtr converter) Parameters Type Name Description IntPtr converter The converter. Returns Type Description bool See Also IDisposable | Improve this Doc View Source ExtendedQt() Extendeds the qt. Declaration public bool ExtendedQt() Returns Type Description bool See Also IDisposable | Improve this Doc View Source ~BindingWrapper() Finalizes an instance of the BindingWrapper class. Declaration protected ~BindingWrapper() See Also IDisposable | Improve this Doc View Source GetConversionResult(IntPtr) Gets the conversion result. Declaration public byte[] GetConversionResult(IntPtr converter) Parameters Type Name Description IntPtr converter The converter. Returns Type Description byte[] See Also IDisposable | Improve this Doc View Source GetCurrentPhase(IntPtr) Gets the current phase. Declaration public int GetCurrentPhase(IntPtr converter) Parameters Type Name Description IntPtr converter The converter. Returns Type Description int See Also IDisposable | Improve this Doc View Source GetGlobalSetting(IntPtr, string) Gets the global setting. Declaration public string GetGlobalSetting(IntPtr settings, string name) Parameters Type Name Description IntPtr settings The settings. string name The name. Returns Type Description string See Also IDisposable | Improve this Doc View Source GetLibraryVersion() Gets the library version. Declaration public string GetLibraryVersion() Returns Type Description string See Also IDisposable | Improve this Doc View Source GetObjectSetting(IntPtr, string) Gets the object setting. Declaration public string GetObjectSetting(IntPtr settings, string name) Parameters Type Name Description IntPtr settings The settings. string name The name. Returns Type Description string See Also IDisposable | Improve this Doc View Source GetPhaseCount(IntPtr) Gets the phase count. Declaration public int GetPhaseCount(IntPtr converter) Parameters Type Name Description IntPtr converter The converter. Returns Type Description int See Also IDisposable | Improve this Doc View Source GetPhaseDescription(IntPtr, int) Gets the phase description. Declaration public string GetPhaseDescription(IntPtr converter, int phase) Parameters Type Name Description IntPtr converter The converter. int phase The phase. Returns Type Description string See Also IDisposable | Improve this Doc View Source GetProgressString(IntPtr) Gets the progress string. Declaration public string GetProgressString(IntPtr converter) Parameters Type Name Description IntPtr converter The converter. Returns Type Description string See Also IDisposable | Improve this Doc View Source Load() Loads this instance. Declaration public void Load() See Also IDisposable | Improve this Doc View Source SetErrorCallback(IntPtr, StringCallback) Sets the error callback. Declaration public int SetErrorCallback(IntPtr converter, StringCallback callback) Parameters Type Name Description IntPtr converter The converter. StringCallback callback The callback. Returns Type Description int See Also IDisposable | Improve this Doc View Source SetFinishedCallback(IntPtr, IntCallback) Sets the finished callback. Declaration public int SetFinishedCallback(IntPtr converter, IntCallback callback) Parameters Type Name Description IntPtr converter The converter. IntCallback callback The callback. Returns Type Description int See Also IDisposable | Improve this Doc View Source SetGlobalSetting(IntPtr, string, string) Sets the global setting. Declaration public int SetGlobalSetting(IntPtr settings, string name, string value) Parameters Type Name Description IntPtr settings The settings. string name The name. string value The value. Returns Type Description int See Also IDisposable | Improve this Doc View Source SetObjectSetting(IntPtr, string, string) Sets the object setting. Declaration public int SetObjectSetting(IntPtr settings, string name, string value) Parameters Type Name Description IntPtr settings The settings. string name The name. string value The value. Returns Type Description int See Also IDisposable | Improve this Doc View Source SetPhaseChangedCallback(IntPtr, VoidCallback) Sets the phase changed callback. Declaration public int SetPhaseChangedCallback(IntPtr converter, VoidCallback callback) Parameters Type Name Description IntPtr converter The converter. VoidCallback callback The callback. Returns Type Description int See Also IDisposable | Improve this Doc View Source SetProgressChangedCallback(IntPtr, VoidCallback) Sets the progress changed callback. Declaration public int SetProgressChangedCallback(IntPtr converter, VoidCallback callback) Parameters Type Name Description IntPtr converter The converter. VoidCallback callback The callback. Returns Type Description int See Also IDisposable | Improve this Doc View Source SetWarningCallback(IntPtr, StringCallback) Sets the warning callback. Declaration public int SetWarningCallback(IntPtr converter, StringCallback callback) Parameters Type Name Description IntPtr converter The converter. StringCallback callback The callback. Returns Type Description int See Also IDisposable Implements IDisposable See Also IDisposable"
  },
  "api/SimpleHtmlToPdf.UnmanagedHandler.CustomUnmanagedType.html": {
    "href": "api/SimpleHtmlToPdf.UnmanagedHandler.CustomUnmanagedType.html",
    "title": "Enum CustomUnmanagedType | Simple Html To Pdf API Reference",
    "keywords": "Enum CustomUnmanagedType Custom unmanaged type Namespace: SimpleHtmlToPdf.UnmanagedHandler Assembly: SimpleHtmlToPdf.dll Syntax public enum CustomUnmanagedType Fields Name Description LPUTF8Str The lput f8 string"
  },
  "api/SimpleHtmlToPdf.UnmanagedHandler.IntCallback.html": {
    "href": "api/SimpleHtmlToPdf.UnmanagedHandler.IntCallback.html",
    "title": "Delegate IntCallback | Simple Html To Pdf API Reference",
    "keywords": "Delegate IntCallback Int Callback delegate Namespace: SimpleHtmlToPdf.UnmanagedHandler Assembly: SimpleHtmlToPdf.dll Syntax public delegate void IntCallback(IntPtr converter, int integer) Parameters Type Name Description IntPtr converter The converter. int integer The integer."
  },
  "api/SimpleHtmlToPdf.UnmanagedHandler.Interfaces.IWkHtmlModule.html": {
    "href": "api/SimpleHtmlToPdf.UnmanagedHandler.Interfaces.IWkHtmlModule.html",
    "title": "Interface IWkHtmlModule | Simple Html To Pdf API Reference",
    "keywords": "Interface IWkHtmlModule WKHTML Module interface Namespace: SimpleHtmlToPdf.UnmanagedHandler.Interfaces Assembly: SimpleHtmlToPdf.dll Syntax public interface IWkHtmlModule Methods | Improve this Doc View Source wkhtmltopdf_add_object(IntPtr, IntPtr, byte[]) Wkhtmltopdfs the add object. Declaration void wkhtmltopdf_add_object(IntPtr converter, IntPtr objectSettings, byte[] data) Parameters Type Name Description IntPtr converter The converter. IntPtr objectSettings The object settings. byte[] data The data. | Improve this Doc View Source wkhtmltopdf_add_object(IntPtr, IntPtr, string) Wkhtmltopdfs the add object. Declaration void wkhtmltopdf_add_object(IntPtr converter, IntPtr objectSettings, string data) Parameters Type Name Description IntPtr converter The converter. IntPtr objectSettings The object settings. string data The data. | Improve this Doc View Source wkhtmltopdf_convert(IntPtr) Wkhtmltopdfs the convert. Declaration bool wkhtmltopdf_convert(IntPtr converter) Parameters Type Name Description IntPtr converter The converter. Returns Type Description bool | Improve this Doc View Source wkhtmltopdf_create_converter(IntPtr) Wkhtmltopdfs the create converter. Declaration IntPtr wkhtmltopdf_create_converter(IntPtr globalSettings) Parameters Type Name Description IntPtr globalSettings The global settings. Returns Type Description IntPtr | Improve this Doc View Source wkhtmltopdf_create_global_settings() Wkhtmltopdfs the create global settings. Declaration IntPtr wkhtmltopdf_create_global_settings() Returns Type Description IntPtr | Improve this Doc View Source wkhtmltopdf_create_object_settings() Wkhtmltopdfs the create object settings. Declaration IntPtr wkhtmltopdf_create_object_settings() Returns Type Description IntPtr | Improve this Doc View Source wkhtmltopdf_current_phase(IntPtr) Wkhtmltopdfs the current phase. Declaration int wkhtmltopdf_current_phase(IntPtr converter) Parameters Type Name Description IntPtr converter The converter. Returns Type Description int | Improve this Doc View Source wkhtmltopdf_deinit() Wkhtmltopdfs the deinit. Declaration int wkhtmltopdf_deinit() Returns Type Description int | Improve this Doc View Source wkhtmltopdf_destroy_converter(IntPtr) Wkhtmltopdfs the destroy converter. Declaration void wkhtmltopdf_destroy_converter(IntPtr converter) Parameters Type Name Description IntPtr converter The converter. | Improve this Doc View Source wkhtmltopdf_destroy_global_settings(IntPtr) Wkhtmltopdfs the destroy global settings. Declaration int wkhtmltopdf_destroy_global_settings(IntPtr settings) Parameters Type Name Description IntPtr settings The settings. Returns Type Description int | Improve this Doc View Source wkhtmltopdf_destroy_object_settings(IntPtr) Wkhtmltopdfs the destroy object settings. Declaration int wkhtmltopdf_destroy_object_settings(IntPtr settings) Parameters Type Name Description IntPtr settings The settings. Returns Type Description int | Improve this Doc View Source wkhtmltopdf_extended_qt() Wkhtmltopdfs the extended qt. Declaration int wkhtmltopdf_extended_qt() Returns Type Description int | Improve this Doc View Source wkhtmltopdf_get_global_setting(IntPtr, string, byte[]) Wkhtmltopdfs the get global setting. Declaration int wkhtmltopdf_get_global_setting(IntPtr settings, string name, byte[] array) Parameters Type Name Description IntPtr settings The settings. string name The name. byte[] array The array. Returns Type Description int | Improve this Doc View Source wkhtmltopdf_get_object_setting(IntPtr, string, byte[]) Wkhtmltopdfs the get object setting. Declaration int wkhtmltopdf_get_object_setting(IntPtr settings, string name, byte[] array) Parameters Type Name Description IntPtr settings The settings. string name The name. byte[] array The array. Returns Type Description int | Improve this Doc View Source wkhtmltopdf_get_output(IntPtr, out IntPtr) Wkhtmltopdfs the get output. Declaration int wkhtmltopdf_get_output(IntPtr converter, out IntPtr data) Parameters Type Name Description IntPtr converter The converter. IntPtr data The data. Returns Type Description int | Improve this Doc View Source wkhtmltopdf_http_error_code(IntPtr) Wkhtmltopdfs the HTTP error code. Declaration int wkhtmltopdf_http_error_code(IntPtr converter) Parameters Type Name Description IntPtr converter The converter. Returns Type Description int | Improve this Doc View Source wkhtmltopdf_init(int) Wkhtmltopdfs the initialize. Declaration int wkhtmltopdf_init(int useGraphics) Parameters Type Name Description int useGraphics The use graphics. Returns Type Description int | Improve this Doc View Source wkhtmltopdf_phase_count(IntPtr) Wkhtmltopdfs the phase count. Declaration int wkhtmltopdf_phase_count(IntPtr converter) Parameters Type Name Description IntPtr converter The converter. Returns Type Description int | Improve this Doc View Source wkhtmltopdf_phase_description(IntPtr, int) Wkhtmltopdfs the phase description. Declaration IntPtr wkhtmltopdf_phase_description(IntPtr converter, int phase) Parameters Type Name Description IntPtr converter The converter. int phase The phase. Returns Type Description IntPtr | Improve this Doc View Source wkhtmltopdf_progress_string(IntPtr) Wkhtmltopdfs the progress string. Declaration IntPtr wkhtmltopdf_progress_string(IntPtr converter) Parameters Type Name Description IntPtr converter The converter. Returns Type Description IntPtr | Improve this Doc View Source wkhtmltopdf_set_error_callback(IntPtr, StringCallback) Wkhtmltopdfs the set error callback. Declaration int wkhtmltopdf_set_error_callback(IntPtr converter, StringCallback callback) Parameters Type Name Description IntPtr converter The converter. StringCallback callback The callback. Returns Type Description int | Improve this Doc View Source wkhtmltopdf_set_finished_callback(IntPtr, IntCallback) Wkhtmltopdfs the set finished callback. Declaration int wkhtmltopdf_set_finished_callback(IntPtr converter, IntCallback callback) Parameters Type Name Description IntPtr converter The converter. IntCallback callback The callback. Returns Type Description int | Improve this Doc View Source wkhtmltopdf_set_global_setting(IntPtr, string, string) Wkhtmltopdfs the set global setting. Declaration int wkhtmltopdf_set_global_setting(IntPtr settings, string name, string value) Parameters Type Name Description IntPtr settings The settings. string name The name. string value The value. Returns Type Description int | Improve this Doc View Source wkhtmltopdf_set_object_setting(IntPtr, string, string) Wkhtmltopdfs the set object setting. Declaration int wkhtmltopdf_set_object_setting(IntPtr settings, string name, string value) Parameters Type Name Description IntPtr settings The settings. string name The name. string value The value. Returns Type Description int | Improve this Doc View Source wkhtmltopdf_set_phase_changed_callback(IntPtr, VoidCallback) Wkhtmltopdfs the set phase changed callback. Declaration int wkhtmltopdf_set_phase_changed_callback(IntPtr converter, VoidCallback callback) Parameters Type Name Description IntPtr converter The converter. VoidCallback callback The callback. Returns Type Description int | Improve this Doc View Source wkhtmltopdf_set_progress_changed_callback(IntPtr, VoidCallback) Wkhtmltopdfs the set progress changed callback. Declaration int wkhtmltopdf_set_progress_changed_callback(IntPtr converter, VoidCallback callback) Parameters Type Name Description IntPtr converter The converter. VoidCallback callback The callback. Returns Type Description int | Improve this Doc View Source wkhtmltopdf_set_warning_callback(IntPtr, StringCallback) Wkhtmltopdfs the set warning callback. Declaration int wkhtmltopdf_set_warning_callback(IntPtr converter, StringCallback callback) Parameters Type Name Description IntPtr converter The converter. StringCallback callback The callback. Returns Type Description int | Improve this Doc View Source wkhtmltopdf_version() Wkhtmltopdfs the version. Declaration IntPtr wkhtmltopdf_version() Returns Type Description IntPtr"
  },
  "api/SimpleHtmlToPdf.UnmanagedHandler.Interfaces.html": {
    "href": "api/SimpleHtmlToPdf.UnmanagedHandler.Interfaces.html",
    "title": "Namespace SimpleHtmlToPdf.UnmanagedHandler.Interfaces | Simple Html To Pdf API Reference",
    "keywords": "Namespace SimpleHtmlToPdf.UnmanagedHandler.Interfaces Interfaces IWkHtmlModule WKHTML Module interface"
  },
  "api/SimpleHtmlToPdf.UnmanagedHandler.PaperKind.html": {
    "href": "api/SimpleHtmlToPdf.UnmanagedHandler.PaperKind.html",
    "title": "Enum PaperKind | Simple Html To Pdf API Reference",
    "keywords": "Enum PaperKind Enumaration of paper kinds from http://msdn.microsoft.com/en-us/library/system.drawing.printing.paperkind.aspx Implemented here because Syste.Drawing.Printing is not ported to NET Core Namespace: SimpleHtmlToPdf.UnmanagedHandler Assembly: SimpleHtmlToPdf.dll Syntax public enum PaperKind Fields Name Description A2 Summary: A2 paper (420 mm by 594 mm). A3 Summary: A3 paper (297 mm by 420 mm). A3Extra Summary: A3 extra paper (322 mm by 445 mm). A3ExtraTransverse Summary: A3 extra transverse paper (322 mm by 445 mm). A3Rotated Summary: A3 rotated paper (420 mm by 297 mm). A3Transverse Summary: A3 transverse paper (297 mm by 420 mm). A4 Summary: A4 paper (210 mm by 297 mm). A4Extra Summary: A4 extra paper (236 mm by 322 mm). This value is specific to the PostScript driver and is used only by Linotronic printers to help save paper. A4Plus Summary: A4 plus paper (210 mm by 330 mm). A4Rotated Summary: A4 rotated paper (297 mm by 210 mm). Requires Windows 98, Windows NT 4.0, or later. A4Small Summary: A4 small paper (210 mm by 297 mm). A4Transverse Summary: A4 transverse paper (210 mm by 297 mm). A5 Summary: A5 paper (148 mm by 210 mm). A5Extra Summary: A5 extra paper (174 mm by 235 mm). A5Rotated Summary: A5 rotated paper (210 mm by 148 mm). Requires Windows 98, Windows NT 4.0, or later. A5Transverse Summary: A5 transverse paper (148 mm by 210 mm). A6 Summary: A6 paper (105 mm by 148 mm). Requires Windows 98, Windows NT 4.0, or later. A6Rotated Summary: A6 rotated paper (148 mm by 105 mm). Requires Windows 98, Windows NT 4.0, or later. APlus Summary: SuperA/SuperA/A4 paper (227 mm by 356 mm). B4 Summary: B4 paper (250 mm by 353 mm). B4Envelope Summary: B4 envelope (250 mm by 353 mm). B4JisRotated Summary: JIS B4 rotated paper (364 mm by 257 mm). Requires Windows 98, Windows NT 4.0, or later. B5 Summary: B5 paper (176 mm by 250 mm). B5Envelope Summary: B5 envelope (176 mm by 250 mm). B5Extra Summary: ISO B5 extra paper (201 mm by 276 mm). B5JisRotated Summary: JIS B5 rotated paper (257 mm by 182 mm). Requires Windows 98, Windows NT 4.0, or later. B5Transverse Summary: JIS B5 transverse paper (182 mm by 257 mm). B6Envelope Summary: B6 envelope (176 mm by 125 mm). B6Jis Summary: JIS B6 paper (128 mm by 182 mm). Requires Windows 98, Windows NT 4.0, or later. B6JisRotated Summary: JIS B6 rotated paper (182 mm by 128 mm). Requires Windows 98, Windows NT 4.0, or later. BPlus Summary: SuperB/SuperB/A3 paper (305 mm by 487 mm). C3Envelope Summary: C3 envelope (324 mm by 458 mm). C4Envelope Summary: C4 envelope (229 mm by 324 mm). C5Envelope Summary: C5 envelope (162 mm by 229 mm). C65Envelope Summary: C65 envelope (114 mm by 229 mm). C6Envelope Summary: C6 envelope (114 mm by 162 mm). CSheet Summary: C paper (17 in. by 22 in.). Custom Summary: The paper size is defined by the user. DLEnvelope Summary: DL envelope (110 mm by 220 mm). DSheet Summary: D paper (22 in. by 34 in.). ESheet Summary: E paper (34 in. by 44 in.). Executive Summary: Executive paper (7.25 in. by 10.5 in.). Folio Summary: Folio paper (8.5 in. by 13 in.). GermanLegalFanfold Summary: German legal fanfold (8.5 in. by 13 in.). GermanStandardFanfold Summary: German standard fanfold (8.5 in. by 12 in.). InviteEnvelope Summary: Invitation envelope (220 mm by 220 mm). IsoB4 Summary: ISO B4 (250 mm by 353 mm). ItalyEnvelope Summary: Italy envelope (110 mm by 230 mm). JapaneseDoublePostcard Summary: Japanese double postcard (200 mm by 148 mm). Requires Windows 98, Windows NT 4.0, or later. JapaneseDoublePostcardRotated Summary: Japanese rotated double postcard (148 mm by 200 mm). Requires Windows 98, Windows NT 4.0, or later. JapaneseEnvelopeChouNumber3 Summary: Japanese Chou #3 envelope. Requires Windows 98, Windows NT 4.0, or later. JapaneseEnvelopeChouNumber3Rotated Summary: Japanese rotated Chou #3 envelope. Requires Windows 98, Windows NT 4.0, or later. JapaneseEnvelopeChouNumber4 Summary: Japanese Chou #4 envelope. Requires Windows 98, Windows NT 4.0, or later. JapaneseEnvelopeChouNumber4Rotated Summary: Japanese rotated Chou #4 envelope. Requires Windows 98, Windows NT 4.0, or later. JapaneseEnvelopeKakuNumber2 Summary: Japanese Kaku #2 envelope. Requires Windows 98, Windows NT 4.0, or later. JapaneseEnvelopeKakuNumber2Rotated Summary: Japanese rotated Kaku #2 envelope. Requires Windows 98, Windows NT 4.0, or later. JapaneseEnvelopeKakuNumber3 Summary: Japanese Kaku #3 envelope. Requires Windows 98, Windows NT 4.0, or later. JapaneseEnvelopeKakuNumber3Rotated Summary: Japanese rotated Kaku #3 envelope. Requires Windows 98, Windows NT 4.0, or later. JapaneseEnvelopeYouNumber4 Summary: Japanese You #4 envelope. Requires Windows 98, Windows NT 4.0, or later. JapaneseEnvelopeYouNumber4Rotated Summary: Japanese You #4 rotated envelope. Requires Windows 98, Windows NT 4.0, or later. JapanesePostcard Summary: Japanese postcard (100 mm by 148 mm). JapanesePostcardRotated Summary: Japanese rotated postcard (148 mm by 100 mm). Requires Windows 98, Windows NT 4.0, or later. Ledger Summary: Ledger paper (17 in. by 11 in.). Legal Summary: Legal paper (8.5 in. by 14 in.). LegalExtra Summary: Legal extra paper (9.275 in. by 15 in.). This value is specific to the PostScript driver and is used only by Linotronic printers in order to conserve paper. Letter Summary: Letter paper (8.5 in. by 11 in.). LetterExtra Summary: Letter extra paper (9.275 in. by 12 in.). This value is specific to the PostScript driver and is used only by Linotronic printers in order to conserve paper. LetterExtraTransverse Summary: Letter extra transverse paper (9.275 in. by 12 in.). LetterPlus Summary: Letter plus paper (8.5 in. by 12.69 in.). LetterRotated Summary: Letter rotated paper (11 in. by 8.5 in.). LetterSmall Summary: Letter small paper (8.5 in. by 11 in.). LetterTransverse Summary: Letter transverse paper (8.275 in. by 11 in.). MonarchEnvelope Summary: Monarch envelope (3.875 in. by 7.5 in.). Note Summary: Note paper (8.5 in. by 11 in.). Number10Envelope Summary: #10 envelope (4.125 in. by 9.5 in.). Number11Envelope Summary: #11 envelope (4.5 in. by 10.375 in.). Number12Envelope Summary: #12 envelope (4.75 in. by 11 in.). Number14Envelope Summary: #14 envelope (5 in. by 11.5 in.). Number9Envelope Summary: #9 envelope (3.875 in. by 8.875 in.). PersonalEnvelope Summary: 6 3/4 envelope (3.625 in. by 6.5 in.). Prc16K Summary: People's Republic of China 16K paper (146 mm by 215 mm). Requires Windows 98, Windows NT 4.0, or later. Prc16KRotated Summary: People's Republic of China 16K rotated paper (146 mm by 215 mm). Requires Windows 98, Windows NT 4.0, or later. Prc32K Summary: People's Republic of China 32K paper (97 mm by 151 mm). Requires Windows 98, Windows NT 4.0, or later. Prc32KBig Summary: People's Republic of China 32K big paper (97 mm by 151 mm). Requires Windows 98, Windows NT 4.0, or later. Prc32KBigRotated Summary: People's Republic of China 32K big rotated paper (97 mm by 151 mm). Requires Windows 98, Windows NT 4.0, or later. Prc32KRotated Summary: People's Republic of China 32K rotated paper (97 mm by 151 mm). Requires Windows 98, Windows NT 4.0, or later. PrcEnvelopeNumber1 Summary: People's Republic of China #1 envelope (102 mm by 165 mm). Requires Windows 98, Windows NT 4.0, or later. PrcEnvelopeNumber10 Summary: People's Republic of China #10 envelope (324 mm by 458 mm). Requires Windows 98, Windows NT 4.0, or later. PrcEnvelopeNumber10Rotated Summary: People's Republic of China #10 rotated envelope (458 mm by 324 mm). Requires Windows 98, Windows NT 4.0, or later. PrcEnvelopeNumber1Rotated Summary: People's Republic of China #1 rotated envelope (165 mm by 102 mm). Requires Windows 98, Windows NT 4.0, or later. PrcEnvelopeNumber2 Summary: People's Republic of China #2 envelope (102 mm by 176 mm). Requires Windows 98, Windows NT 4.0, or later. PrcEnvelopeNumber2Rotated Summary: People's Republic of China #2 rotated envelope (176 mm by 102 mm). Requires Windows 98, Windows NT 4.0, or later. PrcEnvelopeNumber3 Summary: People's Republic of China #3 envelope (125 mm by 176 mm). Requires Windows 98, Windows NT 4.0, or later. PrcEnvelopeNumber3Rotated Summary: People's Republic of China #3 rotated envelope (176 mm by 125 mm). Requires Windows 98, Windows NT 4.0, or later. PrcEnvelopeNumber4 Summary: People's Republic of China #4 envelope (110 mm by 208 mm). Requires Windows 98, Windows NT 4.0, or later. PrcEnvelopeNumber4Rotated Summary: People's Republic of China #4 rotated envelope (208 mm by 110 mm). Requires Windows 98, Windows NT 4.0, or later. PrcEnvelopeNumber5 Summary: People's Republic of China #5 envelope (110 mm by 220 mm). Requires Windows 98, Windows NT 4.0, or later. PrcEnvelopeNumber5Rotated Summary: People's Republic of China Envelope #5 rotated envelope (220 mm by 110 mm). Requires Windows 98, Windows NT 4.0, or later. PrcEnvelopeNumber6 Summary: People's Republic of China #6 envelope (120 mm by 230 mm). Requires Windows 98, Windows NT 4.0, or later. PrcEnvelopeNumber6Rotated Summary: People's Republic of China #6 rotated envelope (230 mm by 120 mm). Requires Windows 98, Windows NT 4.0, or later. PrcEnvelopeNumber7 Summary: People's Republic of China #7 envelope (160 mm by 230 mm). Requires Windows 98, Windows NT 4.0, or later. PrcEnvelopeNumber7Rotated Summary: People's Republic of China #7 rotated envelope (230 mm by 160 mm). Requires Windows 98, Windows NT 4.0, or later. PrcEnvelopeNumber8 Summary: People's Republic of China #8 envelope (120 mm by 309 mm). Requires Windows 98, Windows NT 4.0, or later. PrcEnvelopeNumber8Rotated Summary: People's Republic of China #8 rotated envelope (309 mm by 120 mm). Requires Windows 98, Windows NT 4.0, or later. PrcEnvelopeNumber9 Summary: People's Republic of China #9 envelope (229 mm by 324 mm). Requires Windows 98, Windows NT 4.0, or later. PrcEnvelopeNumber9Rotated Summary: People's Republic of China #9 rotated envelope (324 mm by 229 mm). Requires Windows 98, Windows NT 4.0, or later. Quarto Summary: Quarto paper (215 mm by 275 mm). Standard10x11 Summary: Standard paper (10 in. by 11 in.). Standard10x14 Summary: Standard paper (10 in. by 14 in.). Standard11x17 Summary: Standard paper (11 in. by 17 in.). Standard12x11 Summary: Standard paper (12 in. by 11 in.). Requires Windows 98, Windows NT 4.0, or later. Standard15x11 Summary: Standard paper (15 in. by 11 in.). Standard9x11 Summary: Standard paper (9 in. by 11 in.). Statement Summary: Statement paper (5.5 in. by 8.5 in.). Tabloid Summary: Tabloid paper (11 in. by 17 in.). TabloidExtra Summary: Tabloid extra paper (11.69 in. by 18 in.). This value is specific to the PostScript driver and is used only by Linotronic printers in order to conserve paper. USStandardFanfold Summary: US standard fanfold (14.875 in. by 11 in.)."
  },
  "api/SimpleHtmlToPdf.UnmanagedHandler.StringCallback.html": {
    "href": "api/SimpleHtmlToPdf.UnmanagedHandler.StringCallback.html",
    "title": "Delegate StringCallback | Simple Html To Pdf API Reference",
    "keywords": "Delegate StringCallback String call back delegate Namespace: SimpleHtmlToPdf.UnmanagedHandler Assembly: SimpleHtmlToPdf.dll Syntax public delegate void StringCallback(IntPtr converter, string str) Parameters Type Name Description IntPtr converter The converter. string str The string."
  },
  "api/SimpleHtmlToPdf.UnmanagedHandler.VoidCallback.html": {
    "href": "api/SimpleHtmlToPdf.UnmanagedHandler.VoidCallback.html",
    "title": "Delegate VoidCallback | Simple Html To Pdf API Reference",
    "keywords": "Delegate VoidCallback Void callback delegate Namespace: SimpleHtmlToPdf.UnmanagedHandler Assembly: SimpleHtmlToPdf.dll Syntax public delegate void VoidCallback(IntPtr converter) Parameters Type Name Description IntPtr converter The converter."
  },
  "api/SimpleHtmlToPdf.UnmanagedHandler.WkHtmlModule.html": {
    "href": "api/SimpleHtmlToPdf.UnmanagedHandler.WkHtmlModule.html",
    "title": "Class WkHtmlModule | Simple Html To Pdf API Reference",
    "keywords": "Class WkHtmlModule WKHTML module Inheritance object WkHtmlModule Implements IWkHtmlModule Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SimpleHtmlToPdf.UnmanagedHandler Assembly: SimpleHtmlToPdf.dll Syntax public class WkHtmlModule : IWkHtmlModule Methods | Improve this Doc View Source wkhtmltopdf_add_object(IntPtr, IntPtr, byte[]) Wkhtmltopdfs the add object. Declaration public void wkhtmltopdf_add_object(IntPtr converter, IntPtr objectSettings, byte[] data) Parameters Type Name Description IntPtr converter The converter. IntPtr objectSettings The object settings. byte[] data The data. See Also IWkHtmlModule | Improve this Doc View Source wkhtmltopdf_add_object(IntPtr, IntPtr, string) Wkhtmltopdfs the add object. Declaration public void wkhtmltopdf_add_object(IntPtr converter, IntPtr objectSettings, string data) Parameters Type Name Description IntPtr converter The converter. IntPtr objectSettings The object settings. string data The data. See Also IWkHtmlModule | Improve this Doc View Source wkhtmltopdf_convert(IntPtr) Wkhtmltopdfs the convert. Declaration public bool wkhtmltopdf_convert(IntPtr converter) Parameters Type Name Description IntPtr converter The converter. Returns Type Description bool See Also IWkHtmlModule | Improve this Doc View Source wkhtmltopdf_create_converter(IntPtr) Wkhtmltopdfs the create converter. Declaration public IntPtr wkhtmltopdf_create_converter(IntPtr globalSettings) Parameters Type Name Description IntPtr globalSettings The global settings. Returns Type Description IntPtr See Also IWkHtmlModule | Improve this Doc View Source wkhtmltopdf_create_global_settings() Wkhtmltopdfs the create global settings. Declaration public IntPtr wkhtmltopdf_create_global_settings() Returns Type Description IntPtr See Also IWkHtmlModule | Improve this Doc View Source wkhtmltopdf_create_object_settings() Wkhtmltopdfs the create object settings. Declaration public IntPtr wkhtmltopdf_create_object_settings() Returns Type Description IntPtr See Also IWkHtmlModule | Improve this Doc View Source wkhtmltopdf_current_phase(IntPtr) Wkhtmltopdfs the current phase. Declaration public int wkhtmltopdf_current_phase(IntPtr converter) Parameters Type Name Description IntPtr converter The converter. Returns Type Description int See Also IWkHtmlModule | Improve this Doc View Source wkhtmltopdf_deinit() Wkhtmltopdfs the deinit. Declaration public int wkhtmltopdf_deinit() Returns Type Description int See Also IWkHtmlModule | Improve this Doc View Source wkhtmltopdf_destroy_converter(IntPtr) Wkhtmltopdfs the destroy converter. Declaration public void wkhtmltopdf_destroy_converter(IntPtr converter) Parameters Type Name Description IntPtr converter The converter. See Also IWkHtmlModule | Improve this Doc View Source wkhtmltopdf_destroy_global_settings(IntPtr) Wkhtmltopdfs the destroy global settings. Declaration public int wkhtmltopdf_destroy_global_settings(IntPtr settings) Parameters Type Name Description IntPtr settings The settings. Returns Type Description int See Also IWkHtmlModule | Improve this Doc View Source wkhtmltopdf_destroy_object_settings(IntPtr) Wkhtmltopdfs the destroy object settings. Declaration public int wkhtmltopdf_destroy_object_settings(IntPtr settings) Parameters Type Name Description IntPtr settings The settings. Returns Type Description int See Also IWkHtmlModule | Improve this Doc View Source wkhtmltopdf_extended_qt() Wkhtmltopdfs the extended qt. Declaration public int wkhtmltopdf_extended_qt() Returns Type Description int See Also IWkHtmlModule | Improve this Doc View Source wkhtmltopdf_get_global_setting(IntPtr, string, byte[]) Wkhtmltopdfs the get global setting. Declaration public int wkhtmltopdf_get_global_setting(IntPtr settings, string name, byte[] array) Parameters Type Name Description IntPtr settings The settings. string name The name. byte[] array The array. Returns Type Description int See Also IWkHtmlModule | Improve this Doc View Source wkhtmltopdf_get_object_setting(IntPtr, string, byte[]) Wkhtmltopdfs the get object setting. Declaration public int wkhtmltopdf_get_object_setting(IntPtr settings, string name, byte[] array) Parameters Type Name Description IntPtr settings The settings. string name The name. byte[] array The array. Returns Type Description int See Also IWkHtmlModule | Improve this Doc View Source wkhtmltopdf_get_output(IntPtr, out IntPtr) Wkhtmltopdfs the get output. Declaration public int wkhtmltopdf_get_output(IntPtr converter, out IntPtr data) Parameters Type Name Description IntPtr converter The converter. IntPtr data The data. Returns Type Description int See Also IWkHtmlModule | Improve this Doc View Source wkhtmltopdf_http_error_code(IntPtr) Wkhtmltopdfs the HTTP error code. Declaration public int wkhtmltopdf_http_error_code(IntPtr converter) Parameters Type Name Description IntPtr converter The converter. Returns Type Description int See Also IWkHtmlModule | Improve this Doc View Source wkhtmltopdf_init(int) Wkhtmltopdfs the initialize. Declaration public int wkhtmltopdf_init(int useGraphics) Parameters Type Name Description int useGraphics The use graphics. Returns Type Description int See Also IWkHtmlModule | Improve this Doc View Source wkhtmltopdf_phase_count(IntPtr) Wkhtmltopdfs the phase count. Declaration public int wkhtmltopdf_phase_count(IntPtr converter) Parameters Type Name Description IntPtr converter The converter. Returns Type Description int See Also IWkHtmlModule | Improve this Doc View Source wkhtmltopdf_phase_description(IntPtr, int) Wkhtmltopdfs the phase description. Declaration public IntPtr wkhtmltopdf_phase_description(IntPtr converter, int phase) Parameters Type Name Description IntPtr converter The converter. int phase The phase. Returns Type Description IntPtr See Also IWkHtmlModule | Improve this Doc View Source wkhtmltopdf_progress_string(IntPtr) Wkhtmltopdfs the progress string. Declaration public IntPtr wkhtmltopdf_progress_string(IntPtr converter) Parameters Type Name Description IntPtr converter The converter. Returns Type Description IntPtr See Also IWkHtmlModule | Improve this Doc View Source wkhtmltopdf_set_error_callback(IntPtr, StringCallback) Wkhtmltopdfs the set error callback. Declaration public int wkhtmltopdf_set_error_callback(IntPtr converter, StringCallback callback) Parameters Type Name Description IntPtr converter The converter. StringCallback callback The callback. Returns Type Description int See Also IWkHtmlModule | Improve this Doc View Source wkhtmltopdf_set_finished_callback(IntPtr, IntCallback) Wkhtmltopdfs the set finished callback. Declaration public int wkhtmltopdf_set_finished_callback(IntPtr converter, IntCallback callback) Parameters Type Name Description IntPtr converter The converter. IntCallback callback The callback. Returns Type Description int See Also IWkHtmlModule | Improve this Doc View Source wkhtmltopdf_set_global_setting(IntPtr, string, string) Wkhtmltopdfs the set global setting. Declaration public int wkhtmltopdf_set_global_setting(IntPtr settings, string name, string value) Parameters Type Name Description IntPtr settings The settings. string name The name. string value The value. Returns Type Description int See Also IWkHtmlModule | Improve this Doc View Source wkhtmltopdf_set_object_setting(IntPtr, string, string) Wkhtmltopdfs the set object setting. Declaration public int wkhtmltopdf_set_object_setting(IntPtr settings, string name, string value) Parameters Type Name Description IntPtr settings The settings. string name The name. string value The value. Returns Type Description int See Also IWkHtmlModule | Improve this Doc View Source wkhtmltopdf_set_phase_changed_callback(IntPtr, VoidCallback) Wkhtmltopdfs the set phase changed callback. Declaration public int wkhtmltopdf_set_phase_changed_callback(IntPtr converter, VoidCallback callback) Parameters Type Name Description IntPtr converter The converter. VoidCallback callback The callback. Returns Type Description int See Also IWkHtmlModule | Improve this Doc View Source wkhtmltopdf_set_progress_changed_callback(IntPtr, VoidCallback) Wkhtmltopdfs the set progress changed callback. Declaration public int wkhtmltopdf_set_progress_changed_callback(IntPtr converter, VoidCallback callback) Parameters Type Name Description IntPtr converter The converter. VoidCallback callback The callback. Returns Type Description int See Also IWkHtmlModule | Improve this Doc View Source wkhtmltopdf_set_warning_callback(IntPtr, StringCallback) Wkhtmltopdfs the set warning callback. Declaration public int wkhtmltopdf_set_warning_callback(IntPtr converter, StringCallback callback) Parameters Type Name Description IntPtr converter The converter. StringCallback callback The callback. Returns Type Description int See Also IWkHtmlModule | Improve this Doc View Source wkhtmltopdf_version() Wkhtmltopdfs the version. Declaration public IntPtr wkhtmltopdf_version() Returns Type Description IntPtr See Also IWkHtmlModule Implements IWkHtmlModule See Also IWkHtmlModule"
  },
  "api/SimpleHtmlToPdf.UnmanagedHandler.html": {
    "href": "api/SimpleHtmlToPdf.UnmanagedHandler.html",
    "title": "Namespace SimpleHtmlToPdf.UnmanagedHandler | Simple Html To Pdf API Reference",
    "keywords": "Namespace SimpleHtmlToPdf.UnmanagedHandler Classes BindingWrapper Binding wrapper WkHtmlModule WKHTML module Enums CustomUnmanagedType Custom unmanaged type PaperKind Enumaration of paper kinds from http://msdn.microsoft.com/en-us/library/system.drawing.printing.paperkind.aspx Implemented here because Syste.Drawing.Printing is not ported to NET Core Delegates IntCallback Int Callback delegate StringCallback String call back delegate VoidCallback Void callback delegate"
  },
  "api/SimpleHtmlToPdf.html": {
    "href": "api/SimpleHtmlToPdf.html",
    "title": "Namespace SimpleHtmlToPdf | Simple Html To Pdf API Reference",
    "keywords": "Namespace SimpleHtmlToPdf Classes HtmlConverter Html converter HtmlToPdfDocument Html to Pdf document"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "Welcome | Simple Html To Pdf API Reference",
    "keywords": "Welcome Welcome to the API browser."
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Code | Simple Html To Pdf API Reference",
    "keywords": "Code using Microsoft.AspNetCore.Mvc; using SimpleHtmlToPdf.Interfaces; using SimpleHtmlToPdf.Settings; using SimpleHtmlToPdf.Settings.Enums; using SimpleHtmlToPdf.UnmanagedHandler; namespace SimpleHtmlToPdf.WebApp.net6.Controllers { /// <summary> /// The controller used to generate PDFs. /// </summary> /// <seealso cref=\"Controller\"/> public class HomeController : Controller { /// <summary> /// Initializes a new instance of the <see cref=\"HomeController\"/> class. /// </summary> /// <param name=\"converter\">The converter.</param> public HomeController(IConverter converter) { Converter = converter; } /// <summary> /// The converter instance to use for converting HTML to PDF. /// </summary> /// <value>The converter instance to use for converting HTML to PDF.</value> private IConverter Converter { get; } /// <summary> /// Our PDF generation endpoint /// </summary> /// <returns>The PDF file</returns> public IActionResult TestPDF() { // Define the HTML-to-PDF request input var doc = new HtmlToPdfDocument() { GlobalSettings = { // Color mode of the output file ColorMode = ColorMode.Color, // Orientation of the output file Orientation = Orientation.Landscape, // Paper size of the output file PaperSize = PaperKind.A4Plus, }, Objects = { new ObjectSettings() { // HTML content to convert HtmlContent = \"<html><body>Test</body></html>\", // The default encoding used. WebSettings = { DefaultEncoding = \"utf-8\" }, }, } }; // Convert our HTML document to a PDF document var pdf = Converter.Convert(doc); // Send the PDF file to the browser return File(pdf, \"application/pdf\", \"Test.pdf\"); } } }"
  },
  "index.html": {
    "href": "index.html",
    "title": "Simple HTML to PDF | Simple Html To Pdf API Reference",
    "keywords": "Simple HTML to PDF Simple HTML to PDF is a lightweight NuGet package that provides a simple HTML to PDF converter library for .NET projects. It allows you to easily convert HTML content to PDF documents using the wkhtmltopdf command-line tool. Installation You can install the Simple HTML to PDF package via NuGet Package Manager or by using the .NET CLI. NuGet Package Manager Open the NuGet Package Manager in Visual Studio. Search for \"SimpleHtmlToPdf\" and select the package. Click on the \"Install\" button to install the package into your project. .NET CLI Execute the following command in the terminal: dotnet add package SimpleHtmlToPdf Usage To use the Simple HTML to PDF library in your project, follow these steps: Install the Simple HTML to PDF package (as described in the Installation section). Add a reference to the library in your project: using SimpleHtmlToPdf.Interfaces; using SimpleHtmlToPdf.Settings; using SimpleHtmlToPdf.Settings.Enums; using SimpleHtmlToPdf.UnmanagedHandler; Ask for an instance of the IConverter class from the system's IoC: public HomeController(IConverter converter) { ... } Convert an HTML string to a PDF document: // Define the HTML-to-PDF request input var doc = new HtmlToPdfDocument() { GlobalSettings = { // Color mode of the output file ColorMode = ColorMode.Color, // Orientation of the output file Orientation = Orientation.Landscape, // Paper size of the output file PaperSize = PaperKind.A4Plus, }, Objects = { new ObjectSettings() { // HTML content to convert HtmlContent = \"<html><body>Test</body></html>\", // The default encoding used. WebSettings = { DefaultEncoding = \"utf-8\" }, }, } }; // Convert our HTML document to a PDF document var pdf = Converter.Convert(doc); Replace HtmlContent with the actual HTML content you want to convert. Send the PDF file to the browser: return File(pdf, \"application/pdf\", \"Test.pdf\"); Customize based on your requirements. Contributing Contributions are welcome! If you'd like to contribute to this project, please follow these steps: Fork the repository. Create a new branch: git checkout -b feature/your-feature-name Make your changes and commit them: git commit -m \"Add your commit message\" Push your changes to your forked repository: git push origin feature/your-feature-name Open a pull request in this repository, and provide a detailed description of your changes. License This project is licensed under the Apache 2 License. Acknowledgments The wkhtmltopdf tool, which enables HTML to PDF conversion. The DinkToPDF library, which provided the initial code."
  }
}